{"version":1,"state":{"a08b1519-5750-43f2-a072-a339351df4a0":{"id":"a08b1519-5750-43f2-a072-a339351df4a0","space":"shared","tags":{"system":"abArtifactWizard.wizard","label":"artifact wizard","cursor":"pointer","formOpacity":"0.33","strokeColor":"#c0b3fc","labelPosition":"floatingBillboard","onClick":"@const { dimension } = that;\n\nif (!links.artifact) {\n    await links.learn.abAdapt('abShell');\n}\n\n// Find all the unique abArtifactNames in the inst.\nlet abArtifactNames = new Set();\n\ngetBots((b) => {\n    if (b.tags.abArtifactName && !b.tags.abArtifact) { \n        abArtifactNames.add(b.tags.abArtifactName);\n    }\n})\n\nif (abArtifactNames.size > 0) {\n    // Let the user choose which artifact they would like to generate.\n    abArtifactNames = Array.from(abArtifactNames);\n    abArtifactNames.sort(); // Sort artifact names alphabetically.\n\n    // Convert artifact names into input options.\n    let artifactOptions = abArtifactNames.map((name, index) => {\n        return {\n            label: name,\n            value: name\n        }\n    })\n\n    // Find (if any) the indexes of previously selected artifacts.\n    let prevSelectedIndexes = [];\n    if (configBot.tags.abArtifactPrevSelectedItems) {\n        for (const prevSelectedItem of configBot.tags.abArtifactPrevSelectedItems) {\n            const index = artifactOptions.findIndex(o => o.value === prevSelectedItem.value);\n            if (index >= 0) {\n                prevSelectedIndexes.push(index);\n            }\n        }\n    }\n\n    const selectedItems = await os.showInput(prevSelectedIndexes, {\n        title: 'Choose artifacts to make',\n        type: 'list',\n        subtype: 'multiSelect',\n        items: artifactOptions,\n        placeholder: 'Choose artifacts',\n    });\n\n    configBot.tags.abArtifactPrevSelectedItems = selectedItems;\n\n    let newArtifactBots = [];\n\n    if (selectedItems && selectedItems.length > 0) {\n        const abGridFocus = links.remember.tags.abGridFocus;\n        \n        for (let i = 0; i < selectedItems.length; i++) {\n            const abArtifactName = selectedItems[i].value;\n            const abArtifactBot = await links.artifact.abCreateArtifactBot({ abArtifactName });\n\n            if (abArtifactBot) {\n                links.artifact.abApplyArtifactManifestationTags({\n                    abArtifactBot,\n                    dimension,\n                    position: getBotPosition(thisBot, dimension),\n                })\n\n                newArtifactBots.push(abArtifactBot);\n            }\n        }\n\n        if (newArtifactBots.length > 0) {\n            if (tags.destroyAfterUse && configBot.tags.inst !== 'abArtifactWizard') {\n                destroy(thisBot);\n            }\n        }\n    }\n} else {\n    os.toast(`No artifacts defined in the inst.`)\n}\n","abVersion":"10.4","onEggHatch":"@if (that.eggParameters) {\n    const dimension = that.eggParameters.gridInformation?.dimension ?? 'home';\n    const dimensionX = that.eggParameters.gridInformation?.position?.x ?? 0;\n    const dimensionY = that.eggParameters.gridInformation?.position?.y ?? 0;\n\n    tags[dimension] = true;\n    tags[dimension + 'X'] = dimensionX;\n    tags[dimension + 'Y'] = dimensionY;\n}\n","destroyAfterUse":"true","abIgnore":"true","labelWordWrapMode":"breakWords","abArtifactWizard":true,"color":"#AEA1FF","labelFloatingBackgroundColor":"#AEA1FF","labelColor":"#1e1b2d","remember":"ðŸ”—e5380a6b-8b4d-4a8b-8b04-58e1eb03e5e7","artifact":"ðŸ”—78e41503-c933-4f8a-817a-ba97bf8d5d27","learn":"ðŸ”—6657b865-e983-4401-9fc9-f5418d18a7f7"}}}}