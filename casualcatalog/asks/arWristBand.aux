{"version":1,"state":{"4b798849-7c19-46ef-980c-2107051fa736":{"id":"4b798849-7c19-46ef-980c-2107051fa736","space":"shared","tags":{"abIDOrigin":"arWristBand","abWristBandX":"-3","abWristBandY":"3","form":"sphere","formOpacity":"0.5","home":true,"listening":true,"onAnyBotsAdded":"@if (!configBot.tags.arEnabled) {\n    return;\n}\n\nconst menuPortal = configBot.tags.menuPortal;\nconst allBots = that.bots;\n\nfor (let i = 0; i < allBots.length; i++) {\n    const activeBot = allBots[i];\n\n    if (activeBot.tags[menuPortal] == true) {\n        thisBot.wrist_addItem(activeBot);\n    }\n}","onClick":"@const arCapable = await os.arSupported();\nconst currentDimension = os.getCurrentDimension();\n\nif (!arCapable && !configBot.tags.arEnabled) {\n    masks.color = \"red\";\n    os.toast(\"AR not possible on this device\");\n\n    return;\n} else if (arCapable && !configBot.tags.arEnabled) {\n    os.enableAR();\n\n    configBot.tags.arEnabled = true;\n}\n\nconfigBot.masks.leftWristPortal = \"abWristBand\";\n\nsetTagMask(thisBot, currentDimension, false, \"tempShared\");\n\nmasks.abWristBand = true;\nmasks.onClick = `@ thisBot.onExitClick();`;\nmasks.label = \"X\";\nmasks.form = null;\nmasks.formOpacity = 1;\nmasks.draggable = false;\nmasks.color = \"clear\";\nmasks.scaleZ = 0.1;\nmasks.labelColor = \"#FFFFFF\";\nmasks.onPointerEnter = \"@ masks.scale = 1.1;\";\nmasks.onPointerExit = \"@ masks.scale = null;\";\n\nconst hexBot = getBot(\"transformer\", thisBot.id);\n\nhexBot.masks.color = \"clear\";","onEggHatch":"@if (that.eggParameters) {\n    if (that.eggParameters.gridInformation) {\n        const dimension = that.eggParameters.gridInformation.dimension ?? 'home';\n        const dimensionX = that.eggParameters.gridInformation.position?.x ?? 0;\n        const dimensionY = that.eggParameters.gridInformation.position?.y ?? 0;\n\n        tags.dimension = dimension;\n        tags[dimension] = true;\n        tags[dimension + 'X'] = dimensionX;\n        tags[dimension + 'Y'] = dimensionY;\n    }\n}\n","onExitClick":"@clearTagMasks(thisBot);\n\nconfigBot.masks.leftWristPortal = null;\nconfigBot.tags.arEnabled = null;\n\nos.disableAR();\n\nconst hexBot = getBot(\"transformer\", thisBot.id);\n\nclearTagMasks(hexBot);","scale":"1.5","wristManager":"true","wrist_addItem":"@const targetBot = that;\nconst wristPortal = configBot.tags.leftWristPortal;\nconst otherWristBots = getBots((b) => {\n    return b.tags[wristPortal] === true &&\n        b.links.wristManager !== thisBot\n})\n\notherWristBots.push(targetBot);\n\nconst actualRootCheck = Math.sqrt(otherWristBots.length) % 1 === 0;\nconst baseRoot = Math.ceil(Math.sqrt(otherWristBots.length));\n\nlet targetColumns = baseRoot;\n\nif (actualRootCheck) {\n    targetColumns = Math.sqrt(otherWristBots.length);\n}\n\nlet botNum = 0;\n\nfullLoop:\nfor (let j = 0; j < targetColumns; j++) {\n    const rowNum = j;\n\n    for (let k = 0; k < targetColumns; k++) {\n        const columnNum = k;\n        const currentBot = otherWristBots[botNum];\n\n        if (!currentBot) {\n            break fullLoop;\n        }\n        else {\n            botNum++;\n        }\n\n        currentBot.masks[wristPortal + \"X\"] = (columnNum * 2) - 2;\n        currentBot.masks[wristPortal + \"Y\"] = (rowNum * -2) + 2;\n        currentBot.masks[wristPortal] = true;\n        //currentBot.masks.labelPosition = \"floatingBillboard\";\n    }\n}","arWristBand":"true","system":"arWristBand.manager","abVersion":"10.6","abArtifactName":"arWristBand","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\n    data: {},\n    dependencies: [\n        { askID: 'arWristBand' }\n    ]\n}\n\nreturn shard;","onABArtifactReconstitute":"@const data = that.data;\n\n// arWristBand doesnt have any data to reconsitute.","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\n\nconst dimension = data.tags.dimension;\n\ndelete data.tags.dimension;\ndelete data.tags[dimension + 'X'];\ndelete data.tags[dimension + 'Y'];\ndelete data.tags[dimension + 'Z'];","hex":"ðŸ”—6aa2e82a-d674-4cdc-9101-7a09bffc2fbc"}},"6aa2e82a-d674-4cdc-9101-7a09bffc2fbc":{"id":"6aa2e82a-d674-4cdc-9101-7a09bffc2fbc","space":"shared","tags":{"abIDOrigin":"arWristBand","color":"#00D9CD","form":"hex","home":true,"homeSortOrder":0,"pointable":"false","scale":"0.5","scaleZ":"0.2","transformer":"4b798849-7c19-46ef-980c-2107051fa736","system":"arWristBand.hex","arWristBand":"true","abVersion":"10.6","abArtifactName":"arWristBand","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\n\nconst dimension = data.tags.dimension;\n\ndelete data.tags.dimension;\ndelete data.tags[dimension + 'X'];\ndelete data.tags[dimension + 'Y'];\ndelete data.tags[dimension + 'Z'];\ndelete data.tags[dimension + 'RotationX'];","onABArtifactCollectShards":null,"onABArtifactReconstitute":null,"onEggHatch":"@if (that.eggParameters) {\n    if (that.eggParameters.gridInformation) {\n        const dimension = that.eggParameters.gridInformation.dimension ?? 'home';\n        const dimensionX = that.eggParameters.gridInformation.position?.x ?? 0;\n        const dimensionY = that.eggParameters.gridInformation.position?.y ?? 0;\n\n        tags.dimension = dimension;\n        tags[dimension] = true;\n        tags[dimension + 'X'] = dimensionX;\n        tags[dimension + 'Y'] = dimensionY;\n        tags[dimension + 'RotationX'] = 0.785398;\n    }\n}\n"}}}}