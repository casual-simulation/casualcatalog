{"version":1,"state":{"c438ded3-bdca-4d81-a7da-442650013696":{"id":"c438ded3-bdca-4d81-a7da-442650013696","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","abIDOrigin":"bbSkybox","abToolbox":"true","abVersion":"10.5","addMenuItem":"@//adding custom menu, with additional tags\nlet additionalTags = that;\nlet menuButton = {\n    space: \"tempLocal\",\n    psSkypainterId: tags.id,\n    color: tags.basePromptButtonColor,\n    bbSkyboxMenu: true,\n    pointable: false,\n    loadMenuReset: \"@ destroy(thisBot)\",\n    draggable: false,\n    bbSkyboxMenuBot: true,\n}\n\nfor (const tag in additionalTags) {\n    menuButton[tag] = additionalTags[tag];\n}\n\nif (!ab.links.menu) {\n    // Load abInterface skill if ab.links.menu is not available.\n    await ab.abAdapt('abInterface');\n}\n\n// Call abCreateMenuButton to make the menu button bot.\nab.links.menu.abCreateMenuButton(menuButton);","basePromptButtonColor":"#f6d32a","bbSkyboxReset":"destroy(thisBot)","color":"yellow","form":"input","formAddress":"0","generateSkybox":"@//that is a string for asking the ai\r\nconst prompt = that;\r\nthisBot.makeLoadingMenu();\r\n\r\nlet skyboxImage = await ai.generateSkybox(prompt);\r\n// let skyboxImage = \"https://images.blockadelabs.com/images/imagine/Advanced_no_style_equirectangular-jpg_Show_me_the_mountains_2228630042_13764412.jpg?ver=1\";\r\nconsole.log(skyboxImage);\r\nthisBot.resetSkyboxMenu();\r\n\r\nconst dimension = configBot.tags.gridPortal;\r\nconst skyboxParameters = {\r\n    \"skyboxImage\": skyboxImage,\r\n    \"skyboxTags\": {\r\n        scale: 450,\r\n        [dimension + \"Z\"]: -100,\r\n        onInstJoined: tags.instJoinedString\r\n    }\r\n}\r\n\r\n// let skybox = await shout(\"hatch\", { abID: \"msSkyBot\", recordKey: \"6db28ddc-1835-4fb4-8ed3-5ccf26c02217\", autoHatch: true, eggParameters: skyboxParameters });\r\n\r\nab.links.search.onLookupAskID({\r\n    askID: \"msSkyBot\",\r\n    eggParameters: {\r\n        toolboxBot: tags.toolbox ?? \"\",\r\n        gridInformation: tags.gridInformation,\r\n        skyboxImage: skyboxImage,\r\n        skyboxTags: {\r\n            scale: 450,\r\n            [dimension + \"Z\"]: -100,\r\n            onInstJoined: tags.instJoinedString\r\n        }\r\n    },\r\n})\r\n\r\ngridPortalBot.tags.portalCameraType = \"perspective\";\r\ngridPortalBot.tags.portalPannableMaxX = 30;\r\ngridPortalBot.tags.portalPannableMinX = -30;\r\ngridPortalBot.tags.portalPannableMaxY = 30;\r\ngridPortalBot.tags.portalPannableMinY = -30;\r\ngridPortalBot.tags.portalZoomable = false;\r\n\r\ndestroy(thisBot);","home":true,"homeSortOrder":0,"homeX":-8,"homeY":2,"instJoinedString":"@console.log(`remote joined: ${gridPortalBot.tags.portalCameraType}`)\r\n\r\nif (gridPortalBot.tags.portalCameraType != \"perspective\") {\r\n    gridPortalBot.tags.portalCameraType = \"perspective\";\r\n    gridPortalBot.tags.portalPannableMaxX = 30;\r\n    gridPortalBot.tags.portalPannableMinX = -30;\r\n    gridPortalBot.tags.portalPannableMaxY = 30;\r\n    gridPortalBot.tags.portalPannableMinY = -30;\r\n    gridPortalBot.tags.portalZoomable = false;\r\n}","label":"Sky Painter Bot","makeInputMenu":"@//Creating a prompt menu\r\n// configBot.tags.menuPortal = \"bbSkybox\";\r\nconfigBot.masks.menuPortal = \"bbSkyboxMenu\";\r\n\r\nthisBot.resetSkyboxMenu();\r\n\r\nconst promptMenu = {\r\n    formAddress: \"edit\",\r\n    form: \"input\",\r\n    label: \"Use a prompt to generate skybox\",\r\n    onSubmit: `@ \r\n    let psSkypainterRef = getBot(\"id\",tags.psSkypainterId);\r\n    console.log(psSkypainterRef);\r\n    psSkypainterRef.onCreateSkybox(that.text);\r\n    console.log(\"SUBMIT\");`,\r\n}\r\nconst promptCapture = {\r\n    formAddress: \"circle\",\r\n    label: \"Use camera to generate skybox\",\r\n    onClick: `@ \r\n    let psSkypainterRef = getBot(\"id\",tags.psSkypainterId);\r\n    console.log(\"click capture prompt\");\r\n    psSkypainterRef.promptCapture();`,\r\n}\r\nconst promptLucky = {\r\n    formAddress: \"star\",\r\n    label: \"I'm feeling LUCKY\",\r\n    onClick: `@ \r\n    let psSkypainterRef = getBot(\"id\",tags.psSkypainterId);\r\n    console.log(psSkypainterRef);\r\n    psSkypainterRef.onCreateSkybox(\"generate random background with number 7\");\r\n    `,\r\n}\r\n\r\nlet newPromptMenu = await thisBot.addMenuItem(promptMenu);\r\nlet newPromptCaptureMenu = await thisBot.addMenuItem(promptCapture);\r\nlet newPromptLucky = await thisBot.addMenuItem(promptLucky);","makeLoadingMenu":"@let message = \"LOADING\";\n\nconst statusBar = {\n    space: \"tempLocal\",\n    color: \"#50E2F2\",\n    bbSkybox: true,\n    loadMenuReset: \"@ destroy(thisBot)\",\n    trackNum: 0,\n    labelAlignment:\"center\",\n    // menuItemStyle: {width: \"30%\"},\n    onCreate: `@\n    if(tags.styleModApplied == false){\n        let existingStyle = tags.menuItemStyle;\n        console.log(\"existingStyle\", existingStyle);\n        existingStyle.width = \"300px\";\n        existingStyle[\"align-self\"] = \"center\"\n        tags.menuItemStyle = existingStyle;\n        tags.styleModApplied = true;\n    }\n\n    if (tags.trackNum == 2)\n    {\n        tags.trackNum = 0;\n    }\n    else\n    {\n        tags.trackNum++;\n    }\n\n    tags.label = tags[\"label\"+tags.trackNum];\n    tags.formAddress = tags[\"form\"+tags.trackNum];\n\n    setTimeout(() => whisper(thisBot, \"onCreate\"), 500);`,\n    label0: `${message}.`,\n    label1: `${message}..`,\n    label2: `${message}...`,\n    form0: \"hourglass_bottom\",\n    form1: \"hourglass_top\",\n    form2: \"hourglass_bottom\",\n    loading: true,\n    styleModApplied: false,\n    system: \"skyboxAction.loadingBot\",\n}\n\nlet newStatusBar = await thisBot.addMenuItem(statusBar);\nreturn newStatusBar;","name":"psSkyPainter","onClick":"@//Activate input prompt\n// shout(\"onGridClick\", {});\n// shout(\"abMenuRefresh\");\n// ab.links.manifestation.onGridClick();\nthisBot.resetSkyboxMenu();\nthisBot.makeInputMenu();","onCreate":"@thisBot.makeInputMenu();\n\nconst dimension = configBot.tags.gridPortal;\ntags[dimension] = true;","onCreateSkybox":"@thisBot.resetSkyboxMenu();\r\nthisBot.generateSkybox(that);","onEggHatch":"@if (that.eggParameters) {\r\n    if (that.eggParameters.gridInformation) {\r\n        const dimension = that.eggParameters.gridInformation.dimension ?? 'home';\r\n        const dimensionX = that.eggParameters.gridInformation.position?.x ?? 0;\r\n        const dimensionY = that.eggParameters.gridInformation.position?.y ?? 0;\r\n\r\n        tags[dimension] = true;\r\n        tags[dimension + 'X'] = dimensionX;\r\n        tags[dimension + 'Y'] = dimensionY;\r\n    }\r\n}\r\n","onGridClick":"@thisBot.resetSkyboxMenu();","onInstStreaming":"@thisBot.makeInputMenu();","photo":{"data":{},"height":480,"width":640},"promptCapture":"@const photo = await os.capturePhoto();\r\nif (!photo)\r\n{\r\n    return;\r\n}\r\n\r\nthisBot.resetSkyboxMenu();\r\nthisBot.makeLoadingMenu();\r\n\r\nconst response = await ai.chat({\r\n        role: 'user',\r\n        content: [\r\n            {\r\n                text: `Please generate a detail description of what in the captured image.\r\n                \r\n                RULES:\r\n                1. Do not use any special characters or asteriks.\r\n                2. Make a it a clear concise prompt.\r\n                3. Please limit it to 150 words or less.\r\n                4. Not following the above rules could hurt or break the experience.\r\n                `\r\n            },\r\n            {\r\n                base64: bytes.toBase64String(new Uint8Array(await photo.data.arrayBuffer())),\r\n                mimeType: photo.data.type,\r\n            }\r\n        ]\r\n    }, \r\n    {\r\n        preferredModel: 'gpt-4o'\r\n});\r\n\r\nconsole.log(\"PROMPT: \"+response.content);\r\n\r\nthisBot.onCreateSkybox(response.content);\r\nthisBot.resetSkyboxMenu();","psSkyPainter":"true","resetSkyboxMenu":"@const menuBots = getBots(b=>{\r\n    if(b.tags.space == \"tempLocal\" && b.tags.bbSkyboxMenu == true){\r\n        return true;\r\n    }\r\n})\r\n\r\nwhisper(menuBots, \"loadMenuReset\");","system":"psSkyPainter","bbSkybox":"true"}}}}