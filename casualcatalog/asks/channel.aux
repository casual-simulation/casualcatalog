{"version":1,"state":{"48c96714-2bb4-46a6-901c-d5cb15680c00":{"id":"48c96714-2bb4-46a6-901c-d5cb15680c00","space":"shared","tags":{"system":"channels.channel","channel":"true","artifact":"ðŸ”—78e41503-c933-4f8a-817a-ba97bf8d5d27","abArtifactName":"channel","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\r\n\r\ndelete data.tags.bios;\r\ndelete data.tags.defaultPattern;\r\ndelete data.tags.defaultPatternStudio;\r\ndelete data.tags.instName;\r\ndelete data.tags.channelName;\r\ndelete data.tags.onChannelLoad;","onABArtifactReconstitute":"@const data = that.data;\r\n\r\ntags.bios = data.bios;\r\ntags.instName = data.instName;\r\ntags.defaultPattern = data.defaultPattern;\r\ntags.defaultPatternStudio = data.defaultPatternStudio;\r\ntags.channelName = data.channelName;\r\ntags.onChannelLoaded = data.onChannelLoaded;\r\n\r\n//thisBot.onChannelLoaded();\r\nshout(\"onChannelReconstituted\", thisBot);","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\r\n    data: {\r\n        bios: tags.bios,\r\n        instName: tags.instName,\r\n        defaultPattern: tags.defaultPattern,\r\n        defaultPatternStudio: tags.defaultPatternStudio,\r\n        channelName: tags.channelName,\r\n        onChannelLoaded: tags.onChannelLoaded\r\n    },\r\n    dependencies: [\r\n        {\r\n            askID: 'channel'\r\n        }\r\n    ]\r\n}\r\n\r\nreturn shard;","abIDOrigin":"channel","onChannelLoaded":"@//bios and inst handlers\r\nconst currentURL = new URL(configBot.tags.url);\r\nconst origin = currentURL.origin;\r\n\r\nlet newURL = new URL(origin);\r\n\r\nif (configBot.tags.comId) {\r\n    newURL.searchParams.append(\"comId\", configBot.tags.comId);\r\n}\r\n\r\nnewURL.searchParams.append(\"abStayAwake\", true);\r\n\r\nif (tags.bios == 'studio') {\r\n    if (tags.instName) {\r\n        newURL.searchParams.append(\"owner\", tags.defaultPatternStudio ?? 'player');\r\n        newURL.searchParams.append(\"inst\", tags.instName);\r\n        newURL.searchParams.append(\"gridPortal\", 'home');\r\n    } else {\r\n        newURL.searchParams.append(\"bios\", 'studio');\r\n    }\r\n} \r\nelse if (tags.bios == 'local') {\r\n    if (tags.instName) {\r\n        newURL.searchParams.append(\"staticInst\", tags.instName);\r\n        newURL.searchParams.append(\"gridPortal\", 'home');\r\n    } else {\r\n        newURL.searchParams.append(\"bios\", 'local');\r\n    }\r\n} \r\nelse if (tags.bios == 'free') {\r\n    if (tags.instName) {\r\n        newURL.searchParams.append(\"owner\", 'public');\r\n        newURL.searchParams.append(\"inst\", tags.instName);\r\n        newURL.searchParams.append(\"gridPortal\", 'home'); \r\n    } else {\r\n        newURL.searchParams.append(\"bios\", 'free');\r\n    }\r\n}\r\n\r\n//Put code here that determines the conditions in which a pattern gets loaded\r\nif (tags.defaultPattern) {\r\n    newURL.searchParams.append(\"pattern\", tags.defaultPattern);\r\n}\r\n\r\nif (tags.defaultPatternStudio) {\r\n    newURL.searchParams.append(\"studio\", tags.defaultPatternStudio);\r\n}\r\n\r\nos.openURL(newURL.href);\r\n\r\n//DO NOT REMOVE\r\n//thisBot.cleanup();","cleanup":null,"home":null,"homeX":null,"homeY":null,"homeZ":null}}}}