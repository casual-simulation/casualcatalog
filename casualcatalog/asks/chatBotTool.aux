{"version":1,"state":{"c8ba0cb6-becb-489d-8e94-9291342f2b2f":{"id":"c8ba0cb6-becb-489d-8e94-9291342f2b2f","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","abIgnore":true,"aiModel":"claude-3-5-sonnet-latest","askAi":"@masks.gptActive = true;\r\n\r\nconst userMessage = that;\r\n\r\nconst model = tags.aiModel;\r\nconst contextualPrompt = tags.prompt;\r\n\r\nconst systemPrompt = tags.corePrompt + \" \" + contextualPrompt + \". User message: \" + userMessage;\r\n\r\nconst aiResp = await ai.chat(systemPrompt, {\r\n    model: model ?? \"claude-3-5-sonnet-latest\",\r\n    temperature: 0,\r\n    topP: 1,\r\n    presencePenalty: 0.6,\r\n    frequencyPenalty: 0\r\n});\r\n\r\nab.log(\"AI: \" + aiResp);","bbChatBot":"true","corePrompt":"Your conversation topic is: ","cursor":"pointer","form":"input","icon":"https://brandplayer-prod-filesbucket-458964701190.s3.amazonaws.com/84348f60-2a4c-40eb-89df-0a3223327b4e/5101137ce896b0afdc7b534f49ad8c5fde8f76b2085ffbc1fe8f913f4ab0f283.png","menuItemStyle":"ðŸ§¬{\"border-radius\":\"8px\", \"margin-top\": \"8px\", \"border\": \"2px solid #000\", \"box-shadow\": \"3px 4px #000\", \"min-height\": \"44px\"}","onBotAdded":"@masks[os.getCurrentDimension()] = true;","onClick":"@//If console is not open, open console\r\nif (!ab.links.console.masks.open) {\r\n    whisper(ab.links.console, \"showConsole\");\r\n    ab.links.console.masks.open = true;\r\n}\r\n\r\nif (thisBot.vars.menuBot) {\r\n    destroy(thisBot.vars.menuBot);\r\n    thisBot.vars.menuBot = null;\r\n}\r\n\r\nconst inputMenuBot = {\r\n    \"chatBar\": getLink(thisBot),\r\n    \"onSubmit\": `@\r\n        masks.menuItemText = \"\"; \r\n        links.chatBar.onSubmit({\"text\": that.text ?? null})`,\r\n    \"color\": \"white\",\r\n    \"onDestroy\": `@\r\n        const currentDim = await os.getCurrentDimension();\r\n        setTagMask(links.chatBar, currentDim, true);\r\n    `,\r\n    \"label\": \"chat with everyone\"\r\n}\r\n\r\nlet menuPortal = configBot.tags.menuPortal ?? \"chatBarMenu\";\r\n\r\nif (!configBot.tags.menuPortal)\r\n{\r\n    configBot.tags.menuPortal = menuPortal;\r\n}\r\n\r\ninputMenuBot[menuPortal] = true;\r\ninputMenuBot[menuPortal + \"SortOrder\"] = 10000;\r\n\r\nthisBot.vars.menuBot = await ab.links.menu.abCreateMenuInput(inputMenuBot);\r\n\r\n//const menuPortal = configBot.tags.menuPortal ?? \"menu\";\r\n\r\nmasks[os.getCurrentDimension()] = false;","onCreate":"@tags.abIgnore = true;\r\nab.links.console.tags.showTopBar = false;","onDestroy":"@ab.links.console.tags.showTopBar = true;","onEggHatch":"@if (that.eggParameters) {\n    const dimension = that.eggParameters.gridInformation?.dimension ?? 'home';\n    const dimensionX = that.eggParameters.gridInformation?.position?.x ?? 0;\n    const dimensionY = that.eggParameters.gridInformation?.position?.y ?? 0;\n\n    tags[dimension] = true;\n    tags[dimension + 'X'] = dimensionX;\n    tags[dimension + 'Y'] = dimensionY;\n\n    that.eggParameters.autoOpen ? thisBot.onClick() : null;\n}","onPortalChanged":"@if (that.portal == \"menuPortal\" && that.dimension != \"chatBarMenu\") {\r\n    if (thisBot.vars.menuBot) {\r\n        destroy(thisBot.vars.menuBot);\r\n        thisBot.vars.menuBot = null;\r\n    }\r\n    \r\n    masks[os.getCurrentDimension()] = true;\r\n}","onSubmit":"@//thisBot.askAi(that.text);\r\n\r\nif (!ab.links.console.masks.open) {\r\n    whisper(ab.links.console, \"showConsole\");\r\n    ab.links.console.masks.open = true;\r\n}\r\n\r\nlet username = \"user\";\r\n\r\nif (authBot && authBot.tags.name && authBot.tags.name != \"\") {\r\n    username = authBot.tags.name;\r\n} else if (ab.links.console.masks.preferredName) {\r\n    username = ab.links.console.masks.preferredName;\r\n} else {\r\n    username = await os.showInput(\"\", {\r\n        title: \"What would you like me to call you?\"\r\n    });\r\n    ab.links.console.masks.preferredName = username;\r\n}\r\n\r\nif (that.text && that.text[0] == \".\") {\r\n    ab.links.input.onChat({message: that.text});\r\n    ab.log({message: that.text, name: username, space: \"tempLocal\"});\r\n} else {\r\n    ab.log({message: that.text, name: username, space: \"shared\", rbIgnoreMessage: that.rbIgnoreMessage, messageOrigin: configBot.id, rbProcessMessage: true});\r\n}","system":"tools.chatBot.chatBot","home":true,"homeX":-3,"homeY":-4,"strokeColor":"black","label":"open chat bar","homeZ":0,"abIDOrigin":"chatBotTool","chatBotTool":"true","abVersion":"10.9"}}}}