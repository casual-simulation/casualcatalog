{"version":1,"state":{"ea2d61c1-cef1-43b5-b977-bce215bf9604":{"id":"ea2d61c1-cef1-43b5-b977-bce215bf9604","space":"shared","tags":{"artifactMenuButtonColor":"#4BB7E6","createGeoArtifactMenu":"@//Creating a prompt menu\r\nconfigBot.tags.menuPortal = \"geoArtifactConfigMenu\";\r\n\r\nthisBot.resetGeoArtifactMenu();\r\n\r\nlet menuButton = {\r\n    geoArtifact: getLink(thisBot),\r\n    color: tags.artifactMenuButtonColor,\r\n    geoArtifactTool: true,\r\n    geoArtifactMenuReset: \"@ destroy(thisBot)\",\r\n    geoArtifactConfigMenu: true,\r\n}\r\n\r\nconst titleConfig = {\r\n    ...menuButton,\r\n    formAddress: tags.artifactLocked ? \"\" : \"edit\",\r\n    label: (!tags.artifactLocked ? \"title: \" : \" \") + (tags.artifactTitle ?? \" \"),\r\n    onClick: `@\r\n        if (!links.geoArtifact.tags.artifactLocked) {\r\n            const newTitle = await os.showInput(links.geoArtifact.tags.artifactTitle || '', {\r\n                title: 'Title this artifact'\r\n            });\r\n\r\n            links.geoArtifact.tags.artifactTitle = newTitle;\r\n            \r\n            links.geoArtifact.createGeoArtifactMenu();\r\n        }\r\n    `\r\n}\r\n\r\nconst descriptionConfig = {\r\n    ...menuButton,\r\n    formAddress: tags.artifactLocked ? \"\" : \"edit\",\r\n    label: (!tags.artifactLocked ? \"story: \" : \"\") + (tags.artifactDescription ?? \"\"),\r\n    onClick: `@\r\n        if (!links.geoArtifact.tags.artifactLocked) {\r\n            const newDescription = await os.showInput(links.geoArtifact.tags.artifactDescription || '', {\r\n                title: 'Tell this artifact's story'\r\n            });\r\n\r\n            links.geoArtifact.tags.artifactDescription = newDescription;\r\n            \r\n            links.geoArtifact.createGeoArtifactMenu();\r\n        }\r\n    `\r\n}\r\n\r\nconst viewRecord = {\r\n    ...menuButton,\r\n    formAddress: tags.artifactLocked ? \"\" : \"edit\",\r\n    label:  (!tags.artifactLocked ? \"link: \" + (tags.artifactLink ?? \"\") : \"view record\"),\r\n    onClick: `@\r\n            if (links.geoArtifact.tags.artifactLocked) {\r\n                os.openURL(links.geoArtifact.tags.artifactLink);\r\n            } \r\n            else {\r\n                const newLink = await os.showInput(links.geoArtifact.tags.artifactLink || '', {\r\n                    title: 'Link to this artifact'\r\n                });\r\n\r\n                links.geoArtifact.tags.artifactLink = newLink;\r\n                \r\n                links.geoArtifact.createGeoArtifactMenu();\r\n            }`,\r\n}\r\n\r\nconst geoLocation = {\r\n    ...menuButton,\r\n    formAddress: tags.artifactLocked ? \"\" : \"edit\",\r\n    label: (!tags.artifactLocked ? \"location: \" : \"\") + (tags.longitude && tags.latitude ? tags.longitude + \", \" + tags.latitude : \"\"),\r\n    onClick: `@\r\n        if (!links.geoArtifact.tags.artifactLocked) {\r\n            const newLocation = await os.showInput(tags.longitude && tags.latitude ? tags.longitude + \", \" + tags.latitude : \"\", {\r\n                title: 'Provide location data: longitude,latitude'           \r\n            });\r\n            \r\n            if(!newLocation) {\r\n                return;\r\n            }\r\n            const curPortName = ab.links.remember.tags.abActiveDimension;\r\n            links.geoArtifact.tags[curPortName + \"X\"] = newLocation.split(\",\")[0].replace(\" \", \"\");\r\n            links.geoArtifact.tags[curPortName + \"Y\"] = newLocation.split(\",\")[1].replace(\" \", \"\");\r\n            links.geoArtifact.updateLatitudeLongitude(curPortName);\r\n\r\n            links.geoArtifact.createGeoArtifactMenu();\r\n        }\r\n    `\r\n}\r\n\r\nconst lockUnlock = {\r\n    ...menuButton,\r\n    formAddress: \"lock\",\r\n    label:  tags.artifactLocked ? \"unlock\" : \"lock\",\r\n    onClick: `@\r\n                links.geoArtifact.tags.artifactLocked = ${tags.artifactLocked ? false : true}; \r\n                links.geoArtifact.createGeoArtifactMenu();\r\n                links.geoArtifact.tags.draggable = ${tags.artifactLocked ? true : false};`,\r\n}\r\n\r\nif (tags.artifactLocked) {\r\n    titleConfig.onClick = null;\r\n    descriptionConfig.onClick = null;\r\n    titleConfig.pointable = false;\r\n    descriptionConfig.pointable = false;\r\n\r\n    if (!tags.artifactTitle) {\r\n        titleConfig.label = \"unknown\";\r\n    }\r\n    if (!tags.artifactDescription) {\r\n        descriptionConfig.label = \"unknown\";\r\n    }\r\n\r\n    ab.links.menu.abCreateMenuText(titleConfig);\r\n    ab.links.menu.abCreateMenuText(descriptionConfig);\r\n    ab.links.menu.abCreateMenuButton(viewRecord);\r\n    ab.links.menu.abCreateMenuButton(lockUnlock);\r\n} else {\r\n    ab.links.menu.abCreateMenuButton(titleConfig);\r\n    ab.links.menu.abCreateMenuButton(descriptionConfig);\r\n    ab.links.menu.abCreateMenuButton(viewRecord);\r\n    ab.links.menu.abCreateMenuButton(geoLocation);\r\n    ab.links.menu.abCreateMenuButton(lockUnlock);\r\n}\r\n\r\nsetTagMask(thisBot, \"menuOpen\", true, \"tempLocal\");","draggable":true,"listening":true,"menuOpen":false,"onBotChanged":"@const dimension = ab.links.remember.tags.abActiveDimension;\r\n\r\nif (!dimension) {\r\n    return;\r\n}\r\n\r\nif (that.tags.includes(dimension + \"X\") || that.tags.includes(dimension + \"Y\")) {\r\n    tags.longitude = tags[dimension + \"X\"];\r\n    tags.latitude = tags[dimension + \"Y\"];\r\n}","onClick":"@thisBot.createGeoArtifactMenu();","onDestroy":"@thisBot.resetGeoArtifactMenu();","onDrop":"@const dimension = ab.links.remember.tags.abActiveDimension;\r\n\r\nif (!dimension) {\r\n    return;\r\n}\r\n\r\ntags.longitude = tags[dimension + \"X\"];\r\ntags.latitude = tags[dimension + \"Y\"];\r\n\r\nif (tags.menuOpen && configBot.tags.menuPortal == \"geoArtifactConfigMenu\") {\r\n    thisBot.createGeoArtifactMenu();\r\n}\r\n","onGridClick":"@thisBot.resetGeoArtifactMenu();\r\n\r\ntags.editingTitle = false;\r\ntags.editingDescription = false;\r\ntags.editingLink = false;\r\ntags.editingLocation = false;","resetGeoArtifactMenu":"@const menuBots = getBots(b=>{\r\n    if(b.tags.space == \"tempLocal\" && b.tags.geoArtifactTool == true){\r\n        return true;\r\n    }\r\n})\r\n\r\nwhisper(menuBots, \"geoArtifactMenuReset\");\r\nsetTagMask(thisBot, \"menuOpen\", false, \"tempLocal\");","updateLatitudeLongitude":"@if (!that) {\r\n    return;\r\n}\r\n\r\ntags.longitude = tags[that + \"X\"];\r\ntags.latitude = tags[that + \"Y\"];\r\n\r\nthisBot.createGeoArtifactMenu();","system":"curiosity_toolbox.tools.geo artifact","geoArtifact":"true","abVersion":"10.5","toolboxBot":"ðŸ”—0e298d07-23b3-493b-9d02-c6f641680e72","gridInformation":null,"position":{"x":-85.67361151052046,"y":42.965675675675676},"abIDOrigin":"geoArtifact","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\r\n    data: {\r\n        artifactTitle: tags.artifactTitle,\r\n        artifactDescription: tags.artifactDescription,\r\n        artifactLink: tags.artifactLink,\r\n        longitude: tags.longitude,\r\n        latitude: tags.latitude,\r\n        artifactLocked: tags.artifactLocked,\r\n\r\n        dimensionData: {\r\n            dimension: [ab.links.remember.tags.abActiveDimension],\r\n            [ab.links.remember.tags.abActiveDimension]: tags[ab.links.remember.tags.abActiveDimension],\r\n            [ab.links.remember.tags.abActiveDimension + 'X']: tags[ab.links.remember.tags.abActiveDimension + 'X'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Y']: tags[ab.links.remember.tags.abActiveDimension + 'Y'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Z']: tags[ab.links.remember.tags.abActiveDimension + 'Z'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationX']: tags[ab.links.remember.tags.abActiveDimension + 'RotationX'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationY']: tags[ab.links.remember.tags.abActiveDimension + 'RotationY'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationZ']: tags[ab.links.remember.tags.abActiveDimension + 'RotationZ'],\r\n        },\r\n        scaleX: tags.scaleX,\r\n        scaleY: tags.scaleY,\r\n        scaleZ: tags.scaleZ,\r\n        color: tags.color,\r\n        form: tags.form,\r\n        formSubtype: tags.formSubtype,\r\n        formAddress: tags.formAddress,\r\n        formAddressAspectRatio: tags.formAddressAspectRatio\r\n    },\r\n    dependencies: [\r\n        {\r\n            askID: 'artifactJournal'\r\n        }\r\n    ]\r\n}\r\n\r\nreturn shard;","onABArtifactReconstitute":"@const data = that.data;\r\n\r\ntags.artifactTitle = data.artifactTitle;\r\ntags.artifactDescription = data.artifactDescription;\r\ntags.artifactLink = data.artifactLink;\r\ntags.longitude = data.longitude;\r\ntags.latitude = data.latitude;\r\ntags.artifactLocked = data.artifactLocked;\r\ntags.scaleX = data.scaleX ?? 1;\r\ntags.scaleY = data.scaleY ?? 1;\r\ntags.scaleZ = data.scaleZ ?? 1;\r\ntags.color = data.color ?? '#4BB7E6';\r\ntags.form = data.form;\r\ntags.formSubtype = data.formSubtype;\r\ntags.formAddress = data.formAddress;\r\ntags.formAddressAspectRatio = data.formAddressAspectRatio;\r\n\r\nif (data.dimensionData) {\r\n    for (const tagName in data.dimensionData) {\r\n        tags[tagName] = data.dimensionData[tagName];\r\n    }\r\n}\r\n\r\nif (data.eggParameters) {\r\n    const dimension = data.eggParameters.gridInformation?.dimension ?? 'home';\r\n    const dimensionX = data.eggParameters.gridInformation?.position?.x ?? 0;\r\n    const dimensionY = data.eggParameters.gridInformation?.position?.y ?? 0;\r\n\r\n    tags.dimension = dimension;\r\n    tags[dimension] = true;\r\n    tags[dimension + 'X'] = dimensionX;\r\n    tags[dimension + 'Y'] = dimensionY;\r\n}","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\r\n\r\ndelete data.tags.artifactTitle;\r\ndelete data.tags.artifactDescription;\r\ndelete data.tags.artifactLink;\r\ndelete data.tags.longitude;\r\ndelete data.tags.latitude;\r\ndelete data.tags.artifactLocked;\r\ndelete data.tags.color;\r\ndelete data.tags.form ;\r\ndelete data.tags.formSubtype;\r\ndelete data.tags.formAddress;\r\ndelete data.tags.formAddressAspectRatio;\r\n\r\n// [Ryan] These shouldn't be hardcode but i dont understand whats going on with dimensionData.\r\ndelete data.tags.dimension;\r\ndelete data.tags.home;\r\ndelete data.tags.homeX;\r\ndelete data.tags.homeY;\r\ndelete data.tags.homeZ;\r\ndelete data.tags.homeRotationX;\r\ndelete data.tags.homeRotationY;\r\ndelete data.tags.homeRotationZ;","abArtifactName":"geoArtifact","editingTitle":false,"editingDescription":false,"editingLink":false,"editingLocation":false,"homeWorldBot":"true"}}}}