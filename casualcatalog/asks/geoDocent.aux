{"version":1,"state":{"4ef060e1-2ab8-4c06-ab3a-8ac8415b0dcb":{"id":"4ef060e1-2ab8-4c06-ab3a-8ac8415b0dcb","space":"shared","tags":{"system":"grpm.finny","onABLog":"@const bot = that;\r\n\r\nconst message = bot.tags.message;\r\n\r\nos.tip(\"thinking...\");\r\n\r\nif (message && message.toLowerCase()?.includes(\"hey finny\")) {\r\n    let aiMessage = message.substring(message.toLowerCase()?.indexOf(\"hey finny\") + 9, message.length);\r\n    aiMessage[0] == \",\" ? aiMessage = aiMessage.substring(1).trim() : aiMessage.trim();\r\n\r\n    const artifactData = [];\r\n    const artifactBots = getBots(\"geoArtifact\");\r\n    for (const artbot in artifactBots) {\r\n        if (artifactBots[artbot]?.tags.artifactLocked) {\r\n            const artdata = {\r\n                title: artifactBots[artbot]?.tags.artifactTitle,\r\n                story: artifactBots[artbot]?.tags.artifactDescription,\r\n                location: artifactBots[artbot]?.tags.longitude || \"unknown\" + \", \" + artifactBots[artbot]?.tags.latitude || \"unknown\"\r\n            }\r\n\r\n            artifactData.push(artdata);\r\n        }\r\n    }\r\n\r\n    const response = await ai.chat(\r\n        [{\r\n            role: \"system\",\r\n            content: \"You are a helpful ai for the Grand Rapids Public Museum. You must take a request, if necessary look at the provided museum artifacts, and respond to the request.\"\r\n        },\r\n        {\r\n            role: \"system\",\r\n            content: \"Here are your museum artifacts: \" + JSON.stringify(artifactData)\r\n        },\r\n        {\r\n            role: \"user\",\r\n            content: aiMessage\r\n        }\r\n        ]\r\n    )\r\n\r\n    ab.log({name: \"Finny\", message: response.content});\r\n}","abIDOrigin":"erGRPMFinny","onClick":"@//If console is not open, open console\r\nif (!ab.links.console.masks.open) {\r\n    whisper(ab.links.console, \"showConsole\");\r\n    ab.links.console.masks.open = true;\r\n}\r\n\r\nif (thisBot.vars.menuBot) {\r\n    destroy(thisBot.vars.menuBot);\r\n    thisBot.vars.menuBot = null;\r\n}\r\n\r\nconst inputMenuBot = {\r\n    \"finny\": getLink(thisBot),\r\n    \"onSubmit\": `@\r\n        masks.menuItemText = \"\"; \r\n        links.finny.onSubmit({\"text\": \"hey finny, \" + that.text ?? null})`,\r\n    \"label\": \"chat with finny\",\r\n    \"clearFinnyMenu\": `@destroy(this)`,\r\n    \"finnyMenu\": true\r\n}\r\n\r\nconfigBot.tags.menuPortal = \"finnyMenu\";\r\n\r\nthisBot.vars.menuBot = await ab.links.menu.abCreateMenuInput(inputMenuBot);","onGridClick":"@shout(\"clearFinnyMenu\");","label":"Finny","strokeColor":"#4BB7E6","color":"#4BB7E6","formOpacity":".3","labelColor":"#4BB7E6","onCreate":"@tags[configBot.tags.gridPortal] = true;\r\ntags[configBot.tags.mapPortal] = true;","scale":"1.5","onSubmit":"@//thisBot.askAi(that.text);\r\n\r\nif (!ab.links.console.masks.open) {\r\n    whisper(ab.links.console, \"showConsole\");\r\n    ab.links.console.masks.open = true;\r\n}\r\n\r\nlet username = \"user\";\r\n\r\nif (authBot && authBot.tags.name) {\r\n    username = authBot.tags.name;\r\n} else if (ab.links.console.masks.preferredName) {\r\n    username = ab.links.console.masks.preferredName;\r\n} else {\r\n    username = await os.showInput(\"\", {\r\n        title: \"What would you like me to call you?\"\r\n    });\r\n    ab.links.console.masks.preferredName = username;\r\n}\r\n\r\nif (that.text && that.text[0] == \".\") {\r\n    ab.links.input.onChat({message: that.text});\r\n    ab.log({message: that.text, name: username, space: \"tempLocal\"});\r\n} else {\r\n    ab.log({message: that.text, name: username, space: \"tempLocal\"});\r\n}\r\n\r\nshout(\"clearFinnyMenu\");","home":true,"homeX":-85.67655776391818,"homeY":42.965675675675676,"homeZ":"50","geoDocent":"true","abVersion":"10.5"}}}}