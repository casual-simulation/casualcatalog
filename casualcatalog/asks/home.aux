{"version":1,"state":{"fce84e80-9a2a-4f21-8dff-7796d9bf0fe5":{"id":"fce84e80-9a2a-4f21-8dff-7796d9bf0fe5","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","system":"ab.home.egg","homeEgg":"true","abVersion":"10.6","abIDOrigin":"home","onEggHatch":"@const currentDim = ab.links.remember.tags.abActiveDimension;\r\nconst currentPortal = configBot.tags.mapPortal ? \"map\" : configBot.tags.gridPortal == \"blueprint\" ? \"blueprint\" :\"grid\";\r\n\r\nif (currentPortal != 'map') {\r\n    configBot.tags.mapPortal = currentDim;\r\n}\r\n\r\nab.links.input.onChat({ message: \"..\" });\r\n\r\nif (!authBot) {\r\n    await os.requestAuthBotInBackground();\r\n}\r\n\r\nif (!authBot) {\r\n    console.log(\"HOME EGG: User not logged in.\");\r\n    return;\r\n}\r\n\r\nconst homeEggData = await os.getData(authBot.id, 'home');\r\n\r\nif (!homeEggData.success) {\r\n    thisBot.saveData();\r\n}","saveData":"@if (!authBot) {\r\n    await os.requestAuthBotInBackground();\r\n}\r\n\r\nif (!authBot) {\r\n    console.log(\"[ab.home.egg]: User not logged in.\");\r\n    return;\r\n}\r\n\r\nconst publishAttempt = await ab.links.store.abPublishAB({ab: 'home', sourceEvent: 'home_egg_publish'});\r\n\r\nif (!publishAttempt.success) {\r\n    await os.grantInstAdminPermission(authBot.id);\r\n    const secondPublishAttempt = await ab.links.store.abPublishAB({ab: 'home', sourceEvent: 'home_egg_publish'});\r\n\r\n    if (!secondPublishAttempt.success){\r\n        console.log(\"[ab.home.egg]: Could not publish\", secondPublishAttempt);\r\n    }\r\n}","processInstChange":"@if (thisBot.vars.saveTimout) {\r\n    clearTimeout(thisBot.vars.saveTimout);\r\n    thisBot.vars.saveTimout = null;\r\n}\r\n\r\nthisBot.vars.saveTimout = await setTimeout(() => {\r\n    thisBot.saveData();\r\n}, 5000);","onAnyBotChanged":null,"onAnyBotAdded":null,"onAnyBotsChanged":"@let validChange = false;\r\n\r\nfor (const addedBot of that) {\r\n    if (addedBot.bot.tags.space == 'tempLocal' || addedBot.bot.tags.space == 'local') {\r\n        continue;\r\n    }\r\n\r\n    if (addedBot.bot.tags.abIgnore) {\r\n        continue;\r\n    }\r\n\r\n    if (addedBot.bot.tags.system && addedBot.bot?.tags?.system?.substring(0, 3) == 'ab.') {\r\n        continue;\r\n    }\r\n    \r\n    validChange = true;\r\n    break;\r\n}\r\n\r\nif (validChange) {\r\n    thisBot.processInstChange();\r\n}","onAnyBotsAdded":"@let validChange = false;\r\nfor (const addedBot of that.bots) {\r\n    if (addedBot.tags.space == 'tempLocal' || addedBot.tags.space == 'local') {\r\n        continue;\r\n    }\r\n\r\n    if (addedBot.tags.abIgnore) {\r\n        continue;\r\n    }\r\n\r\n    if (addedBot.tags.system && addedBot.tags.system.substring(0, 3) == 'ab.') {\r\n        continue;\r\n    }\r\n\r\n    validChange = true;\r\n    break;\r\n}\r\n\r\nif (validChange) {\r\n    thisBot.processInstChange();\r\n}"}}}}