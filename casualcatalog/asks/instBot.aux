{"version":1,"state":{"11f3c9f2-d21b-4622-9ea8-f45fa9dc5d10":{"id":"11f3c9f2-d21b-4622-9ea8-f45fa9dc5d10","space":"shared","tags":{"abIDOrigin":"instBot","abVersion":"10.9","cursor":"pointer","expireInstBot":"@if (tags.abIDOrigin == \"instBot\") {\r\n    return;\r\n}\r\n\r\nif (tags.expiredInstBot) {\r\n    return;\r\n}\r\n\r\nsetTagMask(thisBot, 'expiredInstBot', true, \"shared\");\r\nsetTagMask(thisBot, 'color', 'gray', \"shared\");\r\nsetTagMask(thisBot, 'instBotLabel', 'expired', \"shared\");\r\nsetTagMask(thisBot, 'instBotLabelColor', 'white', \"shared\");\r\nsetTagMask(thisBot, 'instBotLabelFloatingBackgroundColor', 'gray', \"shared\");\r\nsetTagMask(thisBot, 'onClick', null, \"shared\");\r\nsetTagMask(thisBot, 'cursor', null, \"shared\");\r\nsetTagMask(thisBot, 'onPointerEnter', null, \"shared\");","homeWorldBot":"true","instBot":"true","instBotLabelColor":"#00001c","instBotLabelFloatingBackgroundColor":"#0000FF","onBotAdded":"@let waitTime = 0;\r\n\r\nwhile(!globalThis.ab?.links.bot_factory) {\r\n    if (waitTime >= 5000) {\r\n        return;\r\n    }\r\n    \r\n    await os.sleep(250);\r\n    waitTime += 250;\r\n}\r\n\r\nmasks.ready = true;\r\n\r\nthisBot.updateBillboardLabel();","onClick":"@os.openURL(tags.instURL);","onPointerEnter":"@if (tags.biosSetting == 'free') {\r\n    const now = DateTime.now().toMillis();\r\n    const expiration = (tags.expirationTime - now) / (1000 * 60 * 60);\r\n    const expHr = Math.trunc(expiration);\r\n    const expMin = String(Math.trunc((expiration % 1) * 60)).padStart(2, '0');\r\n\r\n    if (expiration > 0) {\r\n        os.tip(`temporary (expires in ${expHr}:${expMin})`);\r\n    }\r\n    \r\n    if (expiration <= 0 && tags.instBotLabel != \"expired\") {\r\n        thisBot.expireInstBot();\r\n    }\r\n}","system":"server_toolbox.tools.instBot","updateBillboardLabel":"@if (thisBot.vars.billboardLabelBot) {\r\n    destroy(thisBot.vars.billboardLabelBot);\r\n    thisBot.vars.billboardLabelBot = null;\r\n}\r\n\r\nthisBot.vars.billboardLabelBot = ab.links.bot_factory.abCreateBillboardLabel({ \r\n    bot: thisBot, \r\n    label: tags.instBotLabel,\r\n    color: tags.instBotLabelFloatingBackgroundColor,\r\n    dimension: configBot.tags.mapPortal ?? configBot.tags.gridPortal ?? 'home',\r\n    // botLabelMargin: 0,\r\n    labelColor: tags.instBotLabelColor,\r\n    space: 'tempLocal',\r\n})","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\r\n    data: {\r\n        label: tags.instBotLabel,\r\n        biosSetting: tags.biosSetting,\r\n        creationTime: tags.creationTime,\r\n        expirationTime: tags.expirationTime,\r\n        instSetting: tags.instSetting,\r\n        instURL: tags.instURL,\r\n        patternSetting: tags.patternSetting,\r\n        studioSetting: tags.studioSetting,\r\n        form: tags.form,\r\n        lineTo: tags.lineTo,\r\n        versionSetting: tags.versionSetting,\r\n        color: tags.color,\r\n        channelSetting: tags.channelSetting,\r\n\r\n        dimensionData: {\r\n            [ab.links.remember.tags.abActiveDimension]: tags[ab.links.remember.tags.abActiveDimension],\r\n            [ab.links.remember.tags.abActiveDimension + 'X']: tags[ab.links.remember.tags.abActiveDimension + 'X'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Y']: tags[ab.links.remember.tags.abActiveDimension + 'Y'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Z']: tags[ab.links.remember.tags.abActiveDimension + 'Z'],\r\n        }\r\n    },\r\n    dependencies: [\r\n        {\r\n            askID: 'instBot'\r\n        }\r\n    ]\r\n}\r\n\r\nreturn shard;","onABArtifactReconstitute":"@const data = that.data;\r\n\r\ntags.instBotLabel = data.label ?? null;\r\ntags.biosSetting = data.biosSetting ?? null;\r\ntags.creationTime = data.creationTime ?? null;\r\ntags.expirationTime = data.expirationTime ?? null;\r\ntags.instSetting = data.instSetting ?? null;\r\ntags.instURL = data.instURL ?? null;\r\ntags.patternSetting = data.patternSetting ?? null;\r\ntags.studioSetting = data.studioSetting ?? null;\r\ntags.form = data.form ?? null;\r\ntags.versionSetting = data.versionSetting ?? null;\r\ntags.channelSetting = data.channelSetting ?? null;\r\n\r\nif (data.color) {\r\n    tags.color = data.color;\r\n} else {\r\n    tags.color = \"#0000FF\";\r\n}\r\n\r\nif (data.lineTo) {\r\n    tags.lineTo = data.lineTo;\r\n}\r\n\r\nif (!tags.instBotLabel) {\r\n    let label = (data.instSetting ?? 'server bot') + (tags.biosSetting ? (\" (\" + tags.biosSetting + \")\") : \"\");\r\n    tags.instBotLabel = label;\r\n}\r\n\r\nif (data.dimensionData) {\r\n    for (const tagName in data.dimensionData) {\r\n        tags[tagName] = data.dimensionData[tagName];\r\n    }\r\n}\r\n\r\nif (data.eggParameters) {\r\n    const dimension = data.eggParameters.gridInformation?.dimension ?? 'home';\r\n    const dimensionX = data.eggParameters.gridInformation?.position?.x ?? 0;\r\n    const dimensionY = data.eggParameters.gridInformation?.position?.y ?? 0;\r\n\r\n    tags.dimension = dimension;\r\n    tags[dimension] = true;\r\n    tags[dimension + 'X'] = dimensionX;\r\n    tags[dimension + 'Y'] = dimensionY;\r\n}\r\n\r\n//set creation time if none provided\r\nif (!tags.creationTime) {\r\n    tags.creationTime = DateTime?.now()?.toMillis();\r\n\r\n    if (tags.biosSetting == 'free') {\r\n        tags.expirationTime = DateTime?.fromMillis(tags.creationTime + (24 * 1000 * 60 * 60))?.toMillis();\r\n    }\r\n}\r\n\r\n//Check if expired\r\nif (tags.biosSetting && tags.biosSetting == 'free') {\r\n    const currTime = DateTime?.now()?.toMillis();\r\n\r\n    //TODO: ab1 has different expire times than auxplayer and brandplayer\r\n    //Treating as all expire in 24hr for now\r\n\r\n    const elapsedMS = currTime - tags.creationTime;\r\n    const hoursPassed = elapsedMS / (1000 * 60 * 60);\r\n\r\n    if (hoursPassed >= 24) {\r\n        thisBot.expireInstBot();\r\n    }\r\n}\r\n\r\nshout('clearInstCreatorMenu');\r\nthisBot.updateBillboardLabel();","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\r\n\r\ndelete data.tags.instBotLabel;\r\ndelete data.tags.biosSetting;\r\ndelete data.tags.creationTime;\r\ndelete data.tags.expirationTime;\r\ndelete data.tags.instSetting;\r\ndelete data.tags.instURL;\r\ndelete data.tags.patternSetting;\r\ndelete data.tags.studioSetting;\r\ndelete data.tags.form;\r\ndelete data.tags.lineTo;\r\ndelete data.tags.versionSetting;\r\ndelete data.tags[data.tags.dimension];\r\ndelete data.tags[data.tags.dimension + 'X'];\r\ndelete data.tags[data.tags.dimension + 'Y'];\r\ndelete data.tags[data.tags.dimension + 'Z'];\r\ndelete data.tags.dimension;\r\ndelete data.tags.channelSetting;\r\ndelete data.tags.color;","abArtifactName":"instBot","strokeColor":"#00008c"}}}}