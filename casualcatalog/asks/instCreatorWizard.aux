{"version":1,"state":{"61204826-9bac-487d-ba3e-57f98676d182":{"id":"61204826-9bac-487d-ba3e-57f98676d182","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","system":"server_toolbox.tools.instCreatorWizard","instCreatorWizard":"true","abIgnore":"true","formOpacity":".33","strokeColor":"#0000FF","color":"#0000FF","onEggHatch":"@if (that.eggParameters) {\r\n    const dimension = that.eggParameters.gridInformation?.dimension ?? 'home';\r\n    const dimensionX = that.eggParameters.gridInformation?.position?.x ?? 0;\r\n    const dimensionY = that.eggParameters.gridInformation?.position?.y ?? 0;\r\n\r\n    tags[dimension] = true;\r\n    tags[dimension + 'X'] = dimensionX;\r\n    tags[dimension + 'Y'] = dimensionY;\r\n\r\n    setTagMask(thisBot, \"gridInformation\", that.eggParameters.gridInformation, \"shared\");\r\n    setTagMask(thisBot, \"chosenBIOS\", \"local\", \"shared\");\r\n    \r\n    thisBot.showInstCreatorMenu();\r\n}","showInstCreatorMenu":"@shout('clearInstCreatorMenu');\r\n\r\nconfigBot.masks.menuPortal = 'instCreatorMenu';\r\n\r\nconst biosButton = {\r\n    clearInstCreatorMenu: `@destroy(thisBot);`,\r\n    instCreatorMenu: true,\r\n    label: \"inst type: \" + (tags.chosenBIOS || ''),\r\n    wizard: getLink(thisBot),\r\n    dropdownSortOrder: 1,\r\n    dropdownOptions: [\r\n        {\r\n            label: \"public\",\r\n            clearInstCreatorMenu: `@destroy(thisBot);`,\r\n            instCreatorMenu: true,\r\n            wizard: getLink(thisBot),\r\n            onClick: `@\r\n                setTagMask(links.wizard, \"chosenBIOS\", \"public\");\r\n                links.wizard.showInstCreatorMenu();\r\n            `\r\n        },\r\n        {\r\n            label: \"private\",\r\n            clearInstCreatorMenu: `@destroy(thisBot);`,\r\n            instCreatorMenu: true,\r\n            wizard: getLink(thisBot),\r\n            onClick: `@\r\n                setTagMask(links.wizard, \"chosenBIOS\", \"private\");\r\n                links.wizard.showInstCreatorMenu();\r\n            `\r\n        },\r\n        {\r\n            label: \"local\",\r\n            clearInstCreatorMenu: `@destroy(thisBot);`,\r\n            instCreatorMenu: true,\r\n            wizard: getLink(thisBot),\r\n            onClick: `@\r\n                setTagMask(links.wizard, \"chosenBIOS\", \"local\");\r\n                links.wizard.showInstCreatorMenu();\r\n            `\r\n        }\r\n    ]\r\n}\r\n\r\nab.links.menu.abCreateMenuDropdown(biosButton);\r\n\r\nconst patternButton = {\r\n    clearInstCreatorMenu: `@destroy(thisBot);`,\r\n    instCreatorMenu: true,\r\n    label: \"pattern: \" + (tags.chosenPattern || ''),\r\n    wizard: getLink(thisBot),\r\n    onClick: `@\r\n        const patternName = await os.showInput(links.wizard.tags.chosenPattern || \"\", {\r\n            title: 'choose a pattern to include'\r\n        });\r\n\r\n        setTagMask(links.wizard, \"chosenPattern\", patternName);\r\n        links.wizard.showInstCreatorMenu();\r\n    `,\r\n    instCreatorMenuSortOrder: 2\r\n}\r\n\r\nab.links.menu.abCreateMenuButton(patternButton);\r\n\r\nconst studioButton = {\r\n    clearInstCreatorMenu: `@destroy(thisBot);`,\r\n    instCreatorMenu: true,\r\n    label: \"studio: \" + (tags.chosenStudio || ''),\r\n    wizard: getLink(thisBot),\r\n    onClick: `@\r\n        const studioName = await os.showInput(links.wizard.tags.chosenStudio || \"\", {\r\n            title: 'select a studio'\r\n        });\r\n\r\n        setTagMask(links.wizard, \"chosenStudio\", studioName);\r\n        links.wizard.showInstCreatorMenu();\r\n    `,\r\n    instCreatorMenuSortOrder: 3\r\n}\r\n\r\nab.links.menu.abCreateMenuButton(studioButton);\r\n\r\n//FORCE NAME CHOICE\r\nif (tags.chosenBIOS == 'private' || tags.chosenBIOS == 'local') {\r\n    const instNameButton = {\r\n        clearInstCreatorMenu: `@destroy(thisBot);`,\r\n        instCreatorMenu: true,\r\n        label: \"inst name: \" + (tags.chosenInstName || ''),\r\n        wizard: getLink(thisBot),\r\n        onClick: `@\r\n            const instName = await os.showInput(links.wizard.tags.chosenInstName || \"\", {\r\n                title: 'choose an inst name'\r\n            });\r\n\r\n            setTagMask(links.wizard, \"chosenInstName\", instName);\r\n            links.wizard.showInstCreatorMenu();\r\n        `,\r\n        instCreatorMenuSortOrder: 4\r\n    }\r\n\r\n    ab.links.menu.abCreateMenuButton(instNameButton);\r\n}\r\n\r\n\r\nconst createButton = {\r\n        clearInstCreatorMenu: `@destroy(thisBot);`,\r\n        instCreatorMenu: true,\r\n        label: \"create server\",\r\n        wizard: getLink(thisBot),\r\n        onClick: `@\r\n            links.wizard.createNewInst();\r\n        `,\r\n        instCreatorMenuSortOrder: 10\r\n    }\r\n\r\nab.links.menu.abCreateMenuButton(createButton);","onClick":"@thisBot.showInstCreatorMenu();","cursor":"pointer","home":true,"onAnyBotsRemoved":"@const { botIDs } = that;\r\n\r\nif (botIDs.includes(thisBot.id)) {\r\n    shout(\"clearInstCreatorMenu\");\r\n}","clearInstCreatorMenu":"@configBot.masks.menuPortal = null;","onGridClick":"@shout(\"clearInstCreatorMenu\");","createNewInst":"@shout('clearInstCreatorMenu');\r\n\r\nlet bios = tags.chosenBIOS;\r\nlet instName = tags.chosenInstName;\r\nconst pattern = tags.chosenPattern;\r\nconst studio = tags.chosenStudio;\r\n\r\nif (!bios) {\r\n    bios = 'public';\r\n}\r\n\r\nif (!instName) {\r\n    instName = uuid();\r\n}\r\n\r\nconst currentURL = new URL(configBot.tags.url);\r\nconst origin = currentURL.origin;\r\n\r\nlet newURL = new URL(origin);\r\n\r\nif (abRemember.tags.allowChannels) {\r\n    newURL.searchParams.append(\"channel\", false);\r\n}\r\n\r\nif (configBot.tags.comId) {\r\n    newURL.searchParams.append(\"comId\", configBot.tags.comId);\r\n}\r\n\r\nif (pattern) {\r\n    newURL.searchParams.append(\"pattern\", pattern);\r\n}\r\n\r\nif (studio) {\r\n    newURL.searchParams.append(\"studio\", studio);\r\n}\r\n\r\nif (bios == 'private') {\r\n    if (instName) {\r\n        newURL.searchParams.append(\"owner\", studio ?? 'player');\r\n        newURL.searchParams.append(\"inst\", instName);\r\n        newURL.searchParams.append(\"gridPortal\", 'home');\r\n    } else {\r\n        newURL.searchParams.append(\"bios\", 'studio');\r\n    }\r\n} \r\nelse if (bios == 'local') {\r\n    if (instName) {\r\n        newURL.searchParams.append(\"staticInst\", instName);\r\n        newURL.searchParams.append(\"gridPortal\", 'home');\r\n    } else {\r\n        newURL.searchParams.append(\"bios\", 'local');\r\n    }\r\n} \r\nelse if (bios == 'public') {\r\n    newURL.searchParams.append(\"owner\", 'public');\r\n    newURL.searchParams.append(\"inst\", instName);\r\n    newURL.searchParams.append(\"gridPortal\", 'home');\r\n}\r\n\r\nconst abArtifactShard = {\r\n    data: {\r\n        'biosSetting': bios,\r\n        'instSetting': instName,\r\n        'instURL': newURL.href,\r\n        'patternSetting': pattern,\r\n        'studioSetting': studio,\r\n        eggParameters: {\r\n            gridInformation: tags.gridInformation\r\n        }\r\n    },\r\n    dependencies: [\r\n        {\r\n            askID: \"instBot\"\r\n        }\r\n    ]\r\n};\r\n\r\nlinks.artifact.abCreateArtifactPromiseBot({\r\n    abArtifactName: \"instBot\",\r\n    abArtifactInstanceID: uuid(),\r\n    abArtifactShard,\r\n});\r\n\r\nshout(\"abMenuRefresh\");\r\n\r\ndestroy(thisBot);","homeX":0,"homeY":5,"homeZ":0,"abVersion":"10.10","abIDOrigin":"instCreatorWizard","onBotAdded":"@let waitTime = 0;\r\n\r\nwhile(!globalThis.ab?.links.bot_factory) {\r\n    if (waitTime >= 5000) {\r\n        return;\r\n    }\r\n    \r\n    await os.sleep(250);\r\n    waitTime += 250;\r\n}\r\n\r\nmasks.ready = true;\r\n\r\nthisBot.updateBillboardLabel();","updateBillboardLabel":"@if (thisBot.vars.billboardLabelBot) {\r\n    destroy(thisBot.vars.billboardLabelBot);\r\n    thisBot.vars.billboardLabelBot = null;\r\n}\r\n\r\nthisBot.vars.billboardLabelBot = ab.links.bot_factory.abCreateBillboardLabel({ \r\n    bot: thisBot, \r\n    label: tags.instCreatorLabel,\r\n    color: tags.instCreatorLabelFloatingBackgroundColor,\r\n    dimension: configBot.tags.mapPortal ?? configBot.tags.gridPortal ?? 'home',\r\n    // botLabelMargin: 0,\r\n    labelColor: tags.instCreatorLabelColor,\r\n    space: 'tempLocal',\r\n})","instCreatorLabel":"server wizard","instCreatorLabelColor":"#00001c","instCreatorLabelFloatingBackgroundColor":"#0000FF"}}}}