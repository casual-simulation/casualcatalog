{"version":1,"state":{"17d7964b-867d-4bce-96ad-7f1cba184532":{"id":"17d7964b-867d-4bce-96ad-7f1cba184532","space":"shared","tags":{"system":"ab.uuab.launcher","abVersion":"10.6","abIDOrigin":"homePlace","onGridClick":"@shout(\"clearNewMenuItemMenu\");\r\nshout(\"clearLauncherMenu\");\r\nshout(\"clearUUABMenu\");\r\n","abArtifactName":"launcher","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\r\n    data: {\r\n    },\r\n    dependencies: [\r\n        {\r\n            askID: 'launcher'\r\n        }\r\n    ]\r\n}\r\n\r\nreturn shard;","onABArtifactReconstitute":"@const data = that.data;\r\n\r\nconst uuabDataResponse =  await links.search.onLookupAskID({\r\n    askID: configBot.tags.uuab,\r\n    autoHatch: true,\r\n    sourceEvent: 'ask'\r\n});\r\n\r\nif (uuabDataResponse.success) {\r\n    thisBot.vars.uuabMenuData = uuabDataResponse.data.uuabMenuData;\r\n} else {\r\n    thisBot.vars.uuabMenuData = [];\r\n}\r\n\r\nlinks.console.cmdABSleep();\r\nthisBot.showLauncherMenu();\r\n","artifact":"ðŸ”—78e41503-c933-4f8a-817a-ba97bf8d5d27","learn":"ðŸ”—6657b865-e983-4401-9fc9-f5418d18a7f7","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\r\n\r\ndata.vars?.uuabMenuData = null;","color":"#9F0500","showLauncherMenu":"@shout('abMenuRefresh');\r\nshout(\"clearLauncherMenu\");\r\n\r\nconfigBot.tags.menuPortal = 'launcher_menu';\r\n\r\nconst menuOptions = {\r\n    launcher_menu: true,\r\n    clearLauncherMenu: `@destroy(thisBot);`,\r\n    launcher: getLink(thisBot)\r\n}\r\n\r\nconst newMenuItemButton = {\r\n    ...menuOptions,\r\n    formAddress: 'add',\r\n    label: 'new menu item',\r\n    launcher_menuSortOrder: 1,\r\n    onClick: `@\r\n        links.launcher.clearNewOptions();\r\n        links.launcher.showNewMenuItemMenu()`\r\n}\r\n\r\nconst lockButton = {\r\n    ...menuOptions,\r\n    formAddress: 'lock',\r\n    label: 'lock uuab',\r\n    launcher_menuSortOrder: 2,\r\n    onClick: `@\r\n\r\n    `\r\n}\r\n\r\nconst saveButton = {\r\n    ...menuOptions,\r\n    formAddress: 'save',\r\n    label: 'save changes',\r\n    launcher_menuSortOrder: 3,\r\n    onClick: `@\r\n\r\n    `\r\n}\r\n\r\nconst testButton = {\r\n    ...menuOptions,\r\n    formAddress: 'science',\r\n    label: 'test menu',\r\n    launcher_menuSortOrder: 3,\r\n    onClick: `@\r\n        links.launcher.showTestMenu();\r\n    `\r\n}\r\n\r\n\r\nab.links.menu.abCreateMenuButton(newMenuItemButton);\r\nab.links.menu.abCreateMenuButton(lockButton);\r\nab.links.menu.abCreateMenuButton(saveButton);\r\nab.links.menu.abCreateMenuButton(testButton);","onInstStreaming":"@await os.sleep(1000);\r\nthisBot.showLauncherMenu();","console":"ðŸ”—f8602878-c2ef-48bd-85a0-8d6351eb4120","showNewMenuItemMenu":"@shout('abMenuRefresh');\r\nshout(\"clearNewMenuItemMenu\");\r\n\r\nconfigBot.tags.menuPortal = 'new_menu_item_menu';\r\n\r\nconst menuOptions = {\r\n    new_menu_item_menu: true,\r\n    clearNewMenuItemMenu: `@destroy(thisBot);`,\r\n    launcher: getLink(thisBot)\r\n}\r\n\r\nconst labelButton = {\r\n    ...menuOptions,\r\n    formAddress: 'edit',\r\n    label: 'label: ' + (tags.chosenLabel ?? \"\"),\r\n    new_menu_item_menuSortOrder: 1,\r\n    onClick: `@\r\n        const response = await os.showInput(links.launcher.tags.chosenLabel ?? \"\", {\r\n            autoSelect: true,\r\n            title: 'label this menu item'\r\n        })\r\n\r\n        links.launcher.tags.chosenLabel = response ?? null;\r\n        links.launcher.showNewMenuItemMenu();\r\n    `\r\n}\r\n\r\nconst colorButton = {\r\n    ...menuOptions,\r\n    formAddress: 'edit',\r\n    label: 'color: ' + (tags.chosenColor ?? \"\"),\r\n    new_menu_item_menuSortOrder: 2,\r\n    onClick: `@\r\n        const response = await os.showInput(links.launcher.tags.chosenColor ?? \"\", {\r\n            type: 'color',\r\n            autoSelect: true,\r\n            title: 'choose a color for this menu item'\r\n        })\r\n\r\n        links.launcher.tags.chosenColor = response ?? null;\r\n        links.launcher.showNewMenuItemMenu();\r\n    `\r\n}\r\n\r\nconst groupButton = {\r\n    ...menuOptions,\r\n    formAddress: 'edit',\r\n    label: 'group: ' + (tags.chosenGroup ?? \"\"),\r\n    new_menu_item_menuSortOrder: 3,\r\n    onClick: `@\r\n        const response = await os.showInput(links.launcher.tags.chosenGroup ?? \"\", {\r\n            autoSelect: true,\r\n            title: 'group this menu item with other menu items'\r\n        })\r\n\r\n        links.launcher.tags.chosenGroup = response ?? null;\r\n        links.launcher.showNewMenuItemMenu();\r\n    `\r\n}\r\n\r\nconst orderButton = {\r\n    ...menuOptions,\r\n    formAddress: 'edit',\r\n    label: 'menu order: ' + (tags.chosenOrder ?? \"\"),\r\n    new_menu_item_menuSortOrder: 4,\r\n    onClick: `@\r\n        const response = await os.showInput(links.launcher.tags.chosenOrder ?? \"\", {\r\n            autoSelect: true,\r\n            title: 'choose the order in which this menu item will appear, higher numbers are lower down'\r\n        })\r\n\r\n        links.launcher.tags.chosenOrder = response ?? null;\r\n        links.launcher.showNewMenuItemMenu();\r\n    `\r\n}\r\n\r\nconst onClickButton = {\r\n    ...menuOptions,\r\n    label: 'button type: ' + (tags.chosenOnClick ?? \"\"),\r\n    dropdownSortOrder: 5,\r\n    dropdownOptions: [\r\n        {\r\n            ...menuOptions,\r\n            label: 'info',\r\n            onClick: `@\r\n                links.launcher.tags.chosenOnClick = 'info';\r\n                links.launcher.showNewMenuItemMenu();\r\n            `\r\n        },\r\n        {\r\n            ...menuOptions,\r\n            label: 'open link',\r\n            onClick: `@\r\n                links.launcher.tags.chosenOnClick = 'link';\r\n                links.launcher.showNewMenuItemMenu();\r\n            `\r\n        },\r\n        {\r\n            ...menuOptions,\r\n            label: 'open link in new tab',\r\n            onClick: `@\r\n                links.launcher.tags.chosenOnClick = 'external_link';\r\n                links.launcher.showNewMenuItemMenu();\r\n            `\r\n        },\r\n        {\r\n            ...menuOptions,\r\n            label: 'ask',\r\n            onClick: `@\r\n                links.launcher.tags.chosenOnClick = 'ask';\r\n                links.launcher.showNewMenuItemMenu();\r\n            `\r\n        }\r\n    ]\r\n}\r\n\r\nconst createButton = {\r\n    ...menuOptions,\r\n    formAddress: 'add',\r\n    label: 'create',\r\n    new_menu_item_menuSortOrder: 7,\r\n    onClick: `@\r\n        if (links.launcher.tags.chosenOnClick) {\r\n            links.launcher.addNewMenuItem();\r\n            links.launcher.showLauncherMenu();\r\n        } else {\r\n            os.toast(\"you must provide a button type.\");\r\n        }\r\n    `\r\n}\r\n\r\nab.links.menu.abCreateMenuButton(labelButton);\r\nab.links.menu.abCreateMenuButton(colorButton);\r\nab.links.menu.abCreateMenuButton(groupButton);\r\nab.links.menu.abCreateMenuButton(orderButton);\r\nab.links.menu.abCreateMenuDropdown(onClickButton);\r\n\r\nif (!tags.chosenOnClick) {\r\n    createButton.menuItemStyle = {\r\n        filter: `brightness(50%)`\r\n    }\r\n}\r\n\r\nab.links.menu.abCreateMenuButton(createButton);\r\n\r\n//menus if chosen onClick\r\nswitch(tags.chosenOnClick) {\r\n    case 'info':\r\n        const infoConfigButton = {\r\n            ...menuOptions,\r\n            formAddress: 'edit',\r\n            label: 'provide information',\r\n            new_menu_item_menuSortOrder: 6,\r\n            onClick: `@\r\n                const response = await os.showInput(links.launcher.tags.chosenInfo ?? \"\", {\r\n                    autoSelect: true,\r\n                    title: 'provide the information that should be displayed when clicking this button'\r\n                })\r\n\r\n                links.launcher.tags.chosenInfo = response ?? null;\r\n                links.launcher.showNewMenuItemMenu();\r\n            `\r\n        }\r\n        ab.links.menu.abCreateMenuButton(infoConfigButton);\r\n\r\n        break;\r\n    case 'link':\r\n    case 'external_link':\r\n        const linkConfigButton = {\r\n            ...menuOptions,\r\n            formAddress: 'edit',\r\n            label: 'provide link',\r\n            new_menu_item_menuSortOrder: 6,\r\n            onClick: `@\r\n                const response = await os.showInput(links.launcher.tags.chosenLink ?? \"\", {\r\n                    autoSelect: true,\r\n                    title: 'provide the link that the user should be sent to when clicking this button'\r\n                })\r\n\r\n                links.launcher.tags.chosenLink = response ?? null;\r\n                links.launcher.showNewMenuItemMenu();\r\n            `\r\n        }\r\n        ab.links.menu.abCreateMenuButton(linkConfigButton);\r\n        break;\r\n    case 'ask':\r\n        const askConfigButton = {\r\n            ...menuOptions,\r\n            formAddress: 'edit',\r\n            label: 'provide ask',\r\n            new_menu_item_menuSortOrder: 6,\r\n            onClick: `@\r\n                const response = await os.showInput(links.launcher.tags.chosenAsk ?? \"\", {\r\n                    autoSelect: true,\r\n                    title: 'provide ask that should be loaded when clicking this button'\r\n                })\r\n\r\n                links.launcher.tags.chosenAsk = response ?? null;\r\n                links.launcher.showNewMenuItemMenu();\r\n            `\r\n        }\r\n        ab.links.menu.abCreateMenuButton(askConfigButton);\r\n        break;\r\n    default: \r\n        break;\r\n}","home":"true","onClick":"@thisBot.showLauncherMenu();\r\nconsole.log(\"[LAUNCHER MENU]: \", thisBot.vars.uuabMenuData);","search":"ðŸ”—d8371444-9158-4436-8fc7-84cc91b7f525","clearNewOptions":"@tags.chosenLabel = null;\r\ntags.chosenColor = null;\r\ntags.chosenGroup = null;\r\ntags.chosenOrder = null;\r\ntags.chosenOnClick = null;\r\n\r\ntags.chosenInfo = null;\r\ntags.chosenLink = null;\r\ntags.chosenAsk = null;","uuabMenuData":null,"addNewMenuItem":"@if (!thisBot.vars.uuabMenuData) {\r\n    thisBot.vars.uuabMenuData = [];\r\n}\r\n\r\nconst menuItem = {\r\n    uuabMenu: true,\r\n    uuabMenuSortOrder: tags.chosenOrder ?? thisBot.vars.uuabMenuData.length,\r\n    clearUUABMenu: `@destroy(thisBot)`,\r\n    label: tags.chosenLabel,\r\n    color: tags.chosenColor\r\n}\r\n\r\n//handle grouping logic\r\nif (tags.chosenGroup) {\r\n    const groupIndex = thisBot.vars.uuabMenuData.find(item => {\r\n        console.log(\"groupy\", item);\r\n        thisBot.vars.uuabMenuData[item]?.groupID == tags.chosenGroup;\r\n        return;\r\n    })\r\n\r\n    if (groupIndex) {\r\n        thisBot.vars.uuabMenuData[groupIndex].menuItems.push(menuItem);\r\n    } else {\r\n        thisBot.vars.uuabMenuData.push({\r\n            groupIndex: tags.chosenGroup,\r\n            groupSortOrder: tags.chosenOrder ?? thisBot.vars.uuabMenuData.length,\r\n            menuItems: [\r\n                {\r\n                    ...menuItem\r\n                }\r\n            ]\r\n        })\r\n    }\r\n} \r\n\r\n//if no specified group\r\nelse {\r\n    thisBot.vars.uuabMenuData.push(menuItem);\r\n}\r\n\r\nconsole.log(\"[LAUNCHER MENU]: \", thisBot.vars.uuabMenuData);\r\n\r\n","showTestMenu":"@shout('abMenuRefresh');\nshout(\"clearUUABMenu\");\n\nconfigBot.tags.menuPortal = 'uuabMenu';\n\nif (thisBot.vars.uuabMenuData && thisBot.vars.uuabMenuData.length != 0) {\n    for (let i = 0; i < thisBot.vars.uuabMenuData.length; ++i) {\n        if (thisBot.vars.uuabMenuData[i].groupID) {\n            ab.links.menu.abCreateMenuGroup(thisBot.vars.uuabMenuData);\n        } else {\n            console.log(\"truff\");\n            ab.links.menu.abCreateMenuButton(thisBot.vars.uuabMenuData);\n        }\n    }\n} else {\n    os.toast(\"no menu items found\");\n}","chosenLabel":"tester 2","chosenColor":"#0062B1","chosenOnClick":"info","chosenInfo":"tester 2","chosenGroup":"1","launcher":"true"}}}}