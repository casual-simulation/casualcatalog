{"version":1,"state":{"1832c0ef-0756-4ac5-bbd9-6e090334ecd6":{"id":"1832c0ef-0756-4ac5-bbd9-6e090334ecd6","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","home":"false","homeSortOrder":0,"homeX":0,"homeY":0,"initialize":"@if (!masks.initialized) {\n    masks.initialized = true;\n    shout('onInitialize');\n}","label":"manager","onEggHatch":"@console.log(`[${tags.system}] onEggHatch`);\nthisBot.initialize();","onInitialize":"@gridPortalBot.masks.portalColor = \"#abdbe3\";\nconfigBot.tags.leftWristPortal = `${configBot.id}-leftWristPortal`;\nleftWristPortalBot.tags.portalGridScale = 0.025;\n","onInstJoined":"@console.log(`[${tags.system}] onInstJoined`);\nthisBot.initialize();","system":"livekit-room-test.init","abIDOrigin":"livekit-room-test"}},"34d16f66-a603-4df5-b606-3e3d34611852":{"id":"34d16f66-a603-4df5-b606-3e3d34611852","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotation":"🔁0.3261836147044463,0.07365495411366968,-0.34970666444743126,0.8751482437612471","8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotationX":0.675797655998978,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotationY":-0.09938267861871977,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotationZ":-0.7253721769485189,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalX":0.9081765782405972,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalY":-0.38684396626452233,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalZ":-0.19829347005908937,"form":"mesh","formAddress":"https://publicos-link-filesbucket-404655125928.s3.amazonaws.com/ab-1/b4aec1d6dfa5adafeb38d3f6ff54b0ae06d9f4c964c2f63646c9e07f4b2bd7c2.xml","formSubtype":"gltf","home":true,"homeX":-7,"homeY":-3,"homeZ":0,"system":"livekit-room-test.wilson","abIDOrigin":"livekit-room-test"}},"44b52155-d603-4743-9cd3-d955eea93a6f":{"id":"44b52155-d603-4743-9cd3-d955eea93a6f","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#7B64FF","cursor":"pointer","draggable":"false","home":true,"homeX":"-3","homeY":"-1","homeZ":0,"label":"WebXR","labelPadding":"0.2","onClick":"@if (configBot.tags.inAR) {\n    os.disableAR();\n} else {\n    os.enableAR();\n}","onEnterAR":"@configBot.tags.inAR = true;","onExitAR":"@configBot.tags.inAR = false;","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","system":"livekit-room-test.buttons.toggleXR","abIDOrigin":"livekit-room-test"}},"5394f66e-fb3f-4cea-b411-dc913e7e0e3b":{"id":"5394f66e-fb3f-4cea-b411-dc913e7e0e3b","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#999999","onRoomJoined":"@const { roomName, options } = that;\n\nconfigBot.tags.roomName = roomName;","onRoomLeave":"@const { roomName } = that;\n\nif (roomName === configBot.tags.roomName) {\n    configBot.tags.roomName = null;\n}","onRoomTrackSubscribed":"@if (that.kind === 'video') {\r\n    const otherVideoBots = getBots('videoBot', true);\r\n\r\n    // Calculate a sort order for the new video bot.\r\n    let highestSortOrder = 0;\r\n    for (let videoBot of otherVideoBots) {\r\n        if (typeof videoBot.tags.sortOrder === 'number') {\r\n            if (videoBot.tags.sortOrder > highestSortOrder) {\r\n                highestSortOrder = videoBot.tags.sortOrder;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newVideoBot = create({\r\n        space: 'tempLocal',\r\n        home: true,\r\n        form: 'sprite',\r\n        formAddress: that.address,\r\n        videoBot: true,\r\n        sortOrder: highestSortOrder + 1,\r\n        room: that.roomName,\r\n        isRemote: that.isRemote,\r\n        remoteId: that.remoteId,\r\n        orientationMode: 'billboard',\r\n        scaleX: 1.6,\r\n        scaleY: 1,\r\n        scaleZ: 0.01,\r\n        onVideoBotCreated: `@\r\n            const { newVideoBot, videoBots } = that;\r\n\r\n            if (newVideoBot === thisBot) {\r\n                thisBot.positionRefresh({ videoBots });\r\n\r\n                // Create outline bot for when speaking.\r\n                const speakingOutlineBot = create({\r\n                    space: 'tempLocal',\r\n                    transformer: thisBot.id,\r\n                    form: 'sprite',\r\n                    color: '#68BC00',\r\n                    home: false,\r\n                    homeX: 0,\r\n                    homeY: 0,\r\n                    homeZ: -1,\r\n                    scaleZ: 0.01,\r\n                    scaleX: 1.1,\r\n                    scaleY: 1.15\r\n                })\r\n\r\n                links.speakingOutlineBot = getLink(speakingOutlineBot);\r\n            }\r\n        `,\r\n        onVideoBotDestroyed: `@\r\n            const { videoBots } = that;\r\n            thisBot.positionRefresh({ videoBots });\r\n        `,\r\n        onDestroy: `@\r\n            destroy(links.speakingOutlineBot);\r\n        `,\r\n        onDrag: `@\r\n            tags.userMoved = true;\r\n        `,\r\n        onRoomSpeakersChanged: `@\r\n            const { speakerIds } = that;\r\n            const speaking = speakerIds.some(id => id === tags.remoteId);\r\n            const inAR = configBot.tags.inAR;\r\n\r\n            if (speaking) {\r\n                if (links.speakingOutlineBot) {\r\n                    links.speakingOutlineBot.tags.home = true;\r\n                }\r\n            } else {\r\n                if (links.speakingOutlineBot) {\r\n                    links.speakingOutlineBot.tags.home = false;\r\n                }\r\n            }\r\n        `,\r\n        positionRefresh: `@\r\n            if (tags.userMoved) {\r\n                return;\r\n            }\r\n\r\n            const { videoBots } = that;\r\n\r\n            const index = videoBots.findIndex(b => b === thisBot);\r\n\r\n            tags.homeX = 5;\r\n            tags.homeY = -5 + (index * tags.scaleX);\r\n        `\r\n    });\r\n\r\n    const videoBots = getBots('videoBot', true);\r\n    sortBotsAZ(videoBots, 'sortOrder');\r\n\r\n    shout('onVideoBotCreated', { newVideoBot, videoBots });\r\n}","onRoomTrackUnsubscribed":"@const bots = getBots('formAddress', that.address);\r\n\r\nif (bots && bots.length) {\r\n    destroy(bots);\r\n    \r\n    const videoBots = getBots('videoBot', true);\r\n    sortBotsAZ(videoBots, 'sortOrder');\r\n\r\n    shout('onVideoBotDestroyed', { videoBots });\r\n}","system":"livekit-room-test.roomListener","abIDOrigin":"livekit-room-test"}},"563369ac-8101-4c75-bd7b-b6e6dc140c6e":{"id":"563369ac-8101-4c75-bd7b-b6e6dc140c6e","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#FFFFFF","cursor":"pointer","draggable":"false","home":true,"homeX":"-1","homeY":"-5","label":"Screen Share","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\nconst options = await os.getRoomOptions(inst);\n\nlet screenEnabled = false;\nif (options.success) {\n    screenEnabled = options.options.screen;\n}\n\nconst result = await os.setRoomOptions(inst, {\n    screen: !screenEnabled\n})\n\nconsole.log('setRoomOptions:', result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@const { roomName, options } = that;\n\nmasks.home = true;\nthisBot.setEnabledState({ enabled: options.screen });\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","onRoomOptionsChanged":"@const { roomName, options } = that;\n\nthisBot.setEnabledState({ enabled: options.screen });","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","setEnabledState":"@const { enabled } = that;\n\nif (enabled) {\n    masks.color = null;\n} else {\n    masks.color = '#999999';\n}","system":"livekit-room-test.buttons.toggleScreenShare","abIDOrigin":"livekit-room-test"}},"6f690677-ce71-49a8-86ac-b8e5d6fb8de7":{"id":"6f690677-ce71-49a8-86ac-b8e5d6fb8de7","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#F44E3B","cursor":"pointer","draggable":"false","home":true,"homeX":-3,"homeY":"-3","homeZ":0,"label":"Leave Room","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\n\r\nconst result = await os.leaveRoom(inst, {\r\n    endpoint: 'https://casualos.me'\r\n});\r\n\r\nconsole.log(result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@masks.home = true;\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","system":"livekit-room-test.buttons.leaveRoom","abIDOrigin":"livekit-room-test"}},"758e14e9-0a56-4b0b-8cea-46e5eb308a1c":{"id":"758e14e9-0a56-4b0b-8cea-46e5eb308a1c","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","form":"sprite","formAddress":"https://publicos-link-filesbucket-404655125928.s3.amazonaws.com/ab-1/266b0f9e17952ca9a0569a221b3f4d1ba6652eb9cf14666b68154fe5162e7bc0.png","home":true,"homeX":-10,"homeY":0,"homeZ":0,"onAnyBotClicked":"@","onClick":"@const result = await os.raycast(\"grid\", os.getPointerPosition(\"mouse\"), os.getPointerDirection(\"mouse\"));\n\nos.log('botID: ' + result.botIntersections.map(x => x.bot.id) + ' ' + result.botIntersections.map(b => b.uv).join(', '));","onGridClick":"@// const result = await os.raycast(\"grid\", os.getPointerPosition(\"mouse\"), os.getPointerDirection(\"mouse\"));\n\n// //os.toast('Found Bots: ' + result.botIntersections.map(b => b.id).join(', '));\n// os.log(result.botIntersections)","orientationMode":"billboard","scale":"4","system":"livekit-room-test.stargate","abIDOrigin":"livekit-room-test"}},"8b49f236-3896-470e-832e-8b5c6ca410e7":{"id":"8b49f236-3896-470e-832e-8b5c6ca410e7","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","cursor":"pointer","draggable":"false","home":true,"homeX":"-5","homeY":"-5","homeZ":0,"label":"Camera","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\nconst options = await os.getRoomOptions(inst);\r\n\r\nlet videoEnabled = false;\r\nif (options.success) {\r\n    videoEnabled = options.options.video;\r\n}\r\n\r\nconst result = await os.setRoomOptions(inst, {\r\n    video: !videoEnabled\r\n})\r\n\r\nconsole.log('setRoomOptions:', result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@const { roomName, options } = that;\n\nmasks.home = true;\nthisBot.setEnabledState({ enabled: options.video });\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","onRoomOptionsChanged":"@const { roomName, options } = that;\n\nthisBot.setEnabledState({ enabled: options.video });","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","setEnabledState":"@const { enabled } = that;\n\nif (enabled) {\n    masks.color = null;\n} else {\n    masks.color = '#999999';\n}","system":"livekit-room-test.buttons.toggleCamera","abIDOrigin":"livekit-room-test"}},"8cb975c9-41d2-4942-af65-cf9f625a933a":{"id":"8cb975c9-41d2-4942-af65-cf9f625a933a","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","cursor":"pointer","draggable":"false","home":true,"homeX":"-3","homeY":"-5","homeZ":0,"label":"Microphone","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\nconst options = await os.getRoomOptions(inst);\r\n\r\nlet audioEnabled = false;\r\nif (options.success) {\r\n    audioEnabled = options.options.audio;\r\n}\r\n\r\nconst result = await os.setRoomOptions(inst, {\r\n    audio: !audioEnabled\r\n});\r\n\r\nconsole.log('setRoomOptions:', result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@const { roomName, options } = that;\n\nmasks.home = true;\nthisBot.setEnabledState({ enabled: options.audio });\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","onRoomOptionsChanged":"@const { roomName, options } = that;\n\nthisBot.setEnabledState({ enabled: options.audio });","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","setEnabledState":"@const { enabled } = that;\n\nif (enabled) {\n    masks.color = null;\n} else {\n    masks.color = '#999999';\n}","system":"livekit-room-test.buttons.toggleMic","abIDOrigin":"livekit-room-test"}},"b23a38a5-f2ef-4002-81c0-dca5c36004c9":{"id":"b23a38a5-f2ef-4002-81c0-dca5c36004c9","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","onDestroy":"@globalThis.sortAZ = undefined;\nglobalThis.sortBotsAZ = undefined;\nglobalThis.sortZA = undefined;\nglobalThis.sortBotsZA = undefined;","onInitialize":"@function _sort(array, propertyKey, dir) { \n    array.sort((a, b) => {\n        let valueA = Number(a[propertyKey]);\n        let valueB = Number(b[propertyKey]);\n        \n        if (Number.isNaN(valueA)) {\n            valueA = 0;\n        }\n        if (Number.isNaN(valueB)) {\n            valueB = 0;\n        }\n        \n        if (dir === 'az') {\n            return valueA > valueB ? 1 : -1;\n        } else {\n            return valueA < valueB ? 1 : -1;\n        }\n    });\n}\n\nfunction _sortBots(array, tag, dir) {\n    array.sort((a, b) => {\n        let valueA = Number(a.tags[tag]);\n        let valueB = Number(b.tags[tag]);\n        \n        if (Number.isNaN(valueA)) {\n            valueA = 0;\n        }\n        if (Number.isNaN(valueB)) {\n            valueB = 0;\n        }\n\n        if (dir === 'az') {\n            return valueA > valueB ? 1 : -1;\n        } else {\n            return valueA < valueB ? 1 : -1;\n        }\n    });\n}\n\nfunction sortAZ(array, propertyKey) {\n    return _sort(array, propertyKey, 'az');\n}\n\nfunction sortZA(array, propertyKey) {\n    return _sort(array, propertyKey, 'za');\n}\n\nfunction sortBotsAZ(array, tag) {\n    return _sortBots(array, tag, 'az');\n}\n\nfunction sortBotsZA(array, tag) {\n    return _sortBots(array, tag, 'za');\n}\n\nglobalThis.sortAZ = sortAZ;\nglobalThis.sortBotsAZ = sortBotsAZ;\nglobalThis.sortZA = sortZA;\nglobalThis.sortBotsZA = sortBotsZA;","system":"livekit-room-test.sortUtils","abIDOrigin":"livekit-room-test"}},"f610b122-9c3f-492c-b963-82d47b9785d0":{"id":"f610b122-9c3f-492c-b963-82d47b9785d0","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","cursor":"pointer","draggable":"false","home":true,"homeX":-3,"homeY":-3,"homeZ":0,"label":"Join Room","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\n\r\nconst result = await os.joinRoom(inst, {\r\n    endpoint: 'https://casualos.me'\r\n})\r\n\r\nconsole.log(result);","onInitialize":"@masks.home = true;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@const { roomName } = that;\n\nconfigBot.tags.roomName = null;\nmasks.home = true;\nconsole.log(`[${tags.system}] onRoomLeave`);","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","system":"livekit-room-test.buttons.joinRoom","abIDOrigin":"livekit-room-test"}}}}