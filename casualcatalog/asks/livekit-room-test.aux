{"version":1,"state":{"3baca369-e7d6-4478-b391-bffbc159d257":{"id":"3baca369-e7d6-4478-b391-bffbc159d257","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","cursor":"pointer","draggable":"false","home":true,"homeX":"-5","homeY":"-5","homeZ":0,"label":"Camera","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\nconst options = await os.getRoomOptions(inst);\r\n\r\nlet videoEnabled = false;\r\nif (options.success) {\r\n    videoEnabled = options.options.video;\r\n}\r\n\r\nconst result = await os.setRoomOptions(inst, {\r\n    video: !videoEnabled\r\n})\r\n\r\nconsole.log('setRoomOptions:', result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@const { roomName, options } = that;\n\nmasks.home = true;\nthisBot.setEnabledState({ enabled: options.video });\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","onRoomOptionsChanged":"@const { roomName, options } = that;\n\nthisBot.setEnabledState({ enabled: options.video });","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","setEnabledState":"@const { enabled } = that;\n\nif (enabled) {\n    masks.color = null;\n} else {\n    masks.color = '#999999';\n}","system":"livekit-room-test.buttons.toggleCamera","abIDOrigin":"livekit-room-test"}},"55adebff-03e2-462d-b3c0-bc9c0a5e08b6":{"id":"55adebff-03e2-462d-b3c0-bc9c0a5e08b6","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#999999","onRoomJoined":"@const { roomName, options } = that;\n\nconfigBot.tags.roomName = roomName;","onRoomLeave":"@const { roomName } = that;\n\nif (roomName === configBot.tags.roomName) {\n    configBot.tags.roomName = null;\n}","onRoomTrackSubscribed":"@console.log(`[${tags.system}.${tagName}] that:`, that);\r\n\r\nif (that.kind === 'video') {\r\n    const otherVideoBots = getBots('videoBot', true);\r\n\r\n    // Calculate a sort order for the new video bot.\r\n    let highestSortOrder = 0;\r\n    for (let videoBot of otherVideoBots) {\r\n        if (typeof videoBot.tags.sortOrder === 'number') {\r\n            if (videoBot.tags.sortOrder > highestSortOrder) {\r\n                highestSortOrder = videoBot.tags.sortOrder;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newVideoBot = create({\r\n        space: 'tempLocal',\r\n        home: true,\r\n        form: 'sprite',\r\n        videoBot: true,\r\n        sortOrder: highestSortOrder + 1,\r\n        room: that.roomName,\r\n        formAddress: that.address,\r\n        videoAspectRatio: that.aspectRatio,\r\n        videoSource: that.source,\r\n        videoQuality: that.videoQuality,\r\n        isRemote: that.isRemote,\r\n        remoteId: that.remoteId,\r\n        orientationMode: 'billboard',\r\n        scaleX: that.aspectRatio > 0 ? that.aspectRatio : 1.6,\r\n        scaleY: 1,\r\n        scaleZ: 0.01,\r\n        cursor: 'pointer',\r\n        scale: 1,\r\n        scales: [1, 2, 3],\r\n        onVideoBotCreated: `@\r\n            const { newVideoBot, videoBots } = that;\r\n\r\n            if (newVideoBot === thisBot) {\r\n                thisBot.positionRefresh({ videoBots });\r\n\r\n                // Create outline bot for when speaking.\r\n                const speakingOutlineBot = create({\r\n                    space: 'tempLocal',\r\n                    transformer: thisBot.id,\r\n                    form: 'sprite',\r\n                    color: '#68BC00',\r\n                    home: false,\r\n                    homeX: 0,\r\n                    homeY: 0,\r\n                    homeZ: -1,\r\n                    scaleZ: 0.01,\r\n                    scaleX: 1.1,\r\n                    scaleY: 1.15\r\n                })\r\n\r\n                links.speakingOutlineBot = getLink(speakingOutlineBot);\r\n            }\r\n        `,\r\n        onVideoBotDestroyed: `@\r\n            const { videoBots } = that;\r\n            thisBot.positionRefresh({ videoBots });\r\n        `,\r\n        onDestroy: `@\r\n            destroy(links.speakingOutlineBot);\r\n        `,\r\n        onDrag: `@\r\n            tags.userMoved = true;\r\n        `,\r\n        onPointerEnter: `@\r\n            const { modality } = that;\r\n\r\n            if (modality === 'mouse') {\r\n                tags.mouseOver = true;\r\n\r\n                thisBot.vars.scaleTipTimeoutId = setTimeout(async () => {\r\n                    if (tags.mouseOver && !tags.mouseClicked) {\r\n                        thisBot.vars.scaleTipTimeoutId = null;\r\n                        thisBot.vars.scaleTipId = await os.tip('Click to change size', undefined, undefined, 3);\r\n                    }\r\n                }, 750);\r\n            }\r\n        `,\r\n        onPointerExit: `@\r\n            const { modality } = that;\r\n\r\n            if (modality === 'mouse') {\r\n                tags.mouseOver = false;\r\n                tags.mouseClicked = false;\r\n\r\n                if (thisBot.vars.scaleTipTimeoutId) {\r\n                    clearTimeout(thisBot.vars.scaleTipTimeoutId);\r\n                    thisBot.vars.scaleTipTimeoutId = null;\r\n                }\r\n\r\n                if (thisBot.vars.scaleTipId) {\r\n                    os.hideTips(thisBot.vars.scaleTipId);\r\n                    thisBot.vars.scaleTipId = null;\r\n                }\r\n\r\n            }\r\n        `,\r\n        onClick: `@\r\n            const { modality, buttonId } = that;\r\n\r\n            let changeScale = false;\r\n            if (modality === 'mouse') {\r\n                tags.mouseClicked = true;\r\n                changeScale = buttonId === 'left';\r\n            } else {\r\n                changeScale = true;\r\n            }\r\n\r\n            if (changeScale) {\r\n                const currentScaleIndex = tags.scales.findIndex(s => s === tags.scale);\r\n\r\n                let nextScaleIndex = currentScaleIndex + 1;\r\n\r\n                if (nextScaleIndex >= tags.scales.length) {\r\n                    nextScaleIndex = 0;\r\n                }\r\n\r\n                tags.scale = tags.scales[nextScaleIndex];\r\n            }\r\n        `,\r\n        onRoomSpeakersChanged: `@\r\n            const { speakerIds } = that;\r\n            const speaking = speakerIds.some(id => id === tags.remoteId);\r\n\r\n            if (speaking) {\r\n                if (links.speakingOutlineBot) {\r\n                    links.speakingOutlineBot.tags.home = true;\r\n                }\r\n            } else {\r\n                if (links.speakingOutlineBot) {\r\n                    links.speakingOutlineBot.tags.home = false;\r\n                }\r\n            }\r\n        `,\r\n        positionRefresh: `@\r\n            if (tags.userMoved) {\r\n                return;\r\n            }\r\n\r\n            const { videoBots } = that;\r\n\r\n            const index = videoBots.findIndex(b => b === thisBot);\r\n\r\n            tags.homeX = 5;\r\n            tags.homeY = -5 + (index * tags.scaleX);\r\n        `,\r\n        system: `livekit-room-test.videoBot-${that.remoteId}`\r\n    });\r\n\r\n    const videoBots = getBots('videoBot', true);\r\n    sortBotsAZ(videoBots, 'sortOrder');\r\n\r\n    shout('onVideoBotCreated', { newVideoBot, videoBots });\r\n}","onRoomTrackUnsubscribed":"@console.log(`[${tags.system}.${tagName}] that:`, that);\r\n\r\nconst bots = getBots('formAddress', that.address);\r\n\r\nif (bots && bots.length) {\r\n    destroy(bots);\r\n    \r\n    const videoBots = getBots('videoBot', true);\r\n    sortBotsAZ(videoBots, 'sortOrder');\r\n\r\n    shout('onVideoBotDestroyed', { videoBots });\r\n}","system":"livekit-room-test.roomListener","abIDOrigin":"livekit-room-test"}},"66025b33-d76e-4814-94a0-6dfd6f504ccc":{"id":"66025b33-d76e-4814-94a0-6dfd6f504ccc","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotation":"🔁0.3261836147044463,0.07365495411366968,-0.34970666444743126,0.8751482437612471","8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotationX":0.675797655998978,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotationY":-0.09938267861871977,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalRotationZ":-0.7253721769485189,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalX":0.9081765782405972,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalY":-0.38684396626452233,"8063966c-ae2f-4b2e-a5ed-03f01b07e686-leftWristPortalZ":-0.19829347005908937,"form":"mesh","formAddress":"https://publicos-link-filesbucket-404655125928.s3.amazonaws.com/ab-1/b4aec1d6dfa5adafeb38d3f6ff54b0ae06d9f4c964c2f63646c9e07f4b2bd7c2.xml","formSubtype":"gltf","home":true,"homeX":-7,"homeY":-3,"homeZ":0,"system":"livekit-room-test.wilson","abIDOrigin":"livekit-room-test","homeRotationX":null,"homeRotationY":null,"homeRotationZ":null,"homeRotation":null}},"6eee2f29-4733-43a5-a4d8-a9b30499266e":{"id":"6eee2f29-4733-43a5-a4d8-a9b30499266e","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","onDestroy":"@globalThis.sortAZ = undefined;\nglobalThis.sortBotsAZ = undefined;\nglobalThis.sortZA = undefined;\nglobalThis.sortBotsZA = undefined;","onInitialize":"@function _sort(array, propertyKey, dir) { \n    array.sort((a, b) => {\n        let valueA = Number(a[propertyKey]);\n        let valueB = Number(b[propertyKey]);\n        \n        if (Number.isNaN(valueA)) {\n            valueA = 0;\n        }\n        if (Number.isNaN(valueB)) {\n            valueB = 0;\n        }\n        \n        if (dir === 'az') {\n            return valueA > valueB ? 1 : -1;\n        } else {\n            return valueA < valueB ? 1 : -1;\n        }\n    });\n}\n\nfunction _sortBots(array, tag, dir) {\n    array.sort((a, b) => {\n        let valueA = Number(a.tags[tag]);\n        let valueB = Number(b.tags[tag]);\n        \n        if (Number.isNaN(valueA)) {\n            valueA = 0;\n        }\n        if (Number.isNaN(valueB)) {\n            valueB = 0;\n        }\n\n        if (dir === 'az') {\n            return valueA > valueB ? 1 : -1;\n        } else {\n            return valueA < valueB ? 1 : -1;\n        }\n    });\n}\n\nfunction sortAZ(array, propertyKey) {\n    return _sort(array, propertyKey, 'az');\n}\n\nfunction sortZA(array, propertyKey) {\n    return _sort(array, propertyKey, 'za');\n}\n\nfunction sortBotsAZ(array, tag) {\n    return _sortBots(array, tag, 'az');\n}\n\nfunction sortBotsZA(array, tag) {\n    return _sortBots(array, tag, 'za');\n}\n\nglobalThis.sortAZ = sortAZ;\nglobalThis.sortBotsAZ = sortBotsAZ;\nglobalThis.sortZA = sortZA;\nglobalThis.sortBotsZA = sortBotsZA;","system":"livekit-room-test.sortUtils","abIDOrigin":"livekit-room-test"}},"75eb6e98-2951-43fb-850f-42d6be48ecd9":{"id":"75eb6e98-2951-43fb-850f-42d6be48ecd9","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#F44E3B","cursor":"pointer","draggable":"false","home":true,"homeX":-3,"homeY":"-3","homeZ":0,"label":"Leave Room","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\n\r\nconst result = await os.leaveRoom(inst, {\r\n    endpoint: 'https://casualos.me'\r\n});\r\n\r\nconsole.log(result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@masks.home = true;\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","system":"livekit-room-test.buttons.leaveRoom","abIDOrigin":"livekit-room-test"}},"87576d55-81a9-42ac-ae19-ccb1d0030fb1":{"id":"87576d55-81a9-42ac-ae19-ccb1d0030fb1","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","home":"false","homeSortOrder":0,"homeX":0,"homeY":0,"initialize":"@if (!masks.initialized) {\n    masks.initialized = true;\n    shout('onInitialize');\n}","label":"manager","onEggHatch":"@console.log(`[${tags.system}] onEggHatch`);\nthisBot.initialize();","onInitialize":"@gridPortalBot.masks.portalColor = \"#abdbe3\";\nconfigBot.tags.leftWristPortal = `${configBot.id}-leftWristPortal`;\nleftWristPortalBot.tags.portalGridScale = 0.025;\n","onInstJoined":"@console.log(`[${tags.system}] onInstJoined`);\nthisBot.initialize();","system":"livekit-room-test.init","abIDOrigin":"livekit-room-test"}},"8f88471b-9123-4da9-88ba-5f929011f8c0":{"id":"8f88471b-9123-4da9-88ba-5f929011f8c0","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","cursor":"pointer","draggable":"false","home":true,"homeX":-3,"homeY":-3,"homeZ":0,"label":"Join Room","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\n\r\nconst result = await os.joinRoom(inst, {\r\n    endpoint: 'https://casualos.me'\r\n})\r\n\r\nconsole.log(result);","onInitialize":"@masks.home = true;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@const { roomName } = that;\n\nconfigBot.tags.roomName = null;\nmasks.home = true;\nconsole.log(`[${tags.system}] onRoomLeave`);","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","system":"livekit-room-test.buttons.joinRoom","abIDOrigin":"livekit-room-test"}},"9e3c9bb4-4f46-4ade-845a-96912d151ef7":{"id":"9e3c9bb4-4f46-4ade-845a-96912d151ef7","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","cursor":"pointer","draggable":"false","home":true,"homeX":"-3","homeY":"-5","homeZ":0,"label":"Microphone","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\r\nconst options = await os.getRoomOptions(inst);\r\n\r\nlet audioEnabled = false;\r\nif (options.success) {\r\n    audioEnabled = options.options.audio;\r\n}\r\n\r\nconst result = await os.setRoomOptions(inst, {\r\n    audio: !audioEnabled\r\n});\r\n\r\nconsole.log('setRoomOptions:', result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@const { roomName, options } = that;\n\nmasks.home = true;\nthisBot.setEnabledState({ enabled: options.audio });\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","onRoomOptionsChanged":"@const { roomName, options } = that;\n\nthisBot.setEnabledState({ enabled: options.audio });","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","setEnabledState":"@const { enabled } = that;\n\nif (enabled) {\n    masks.color = null;\n} else {\n    masks.color = '#999999';\n}","system":"livekit-room-test.buttons.toggleMic","abIDOrigin":"livekit-room-test"}},"be6387cb-9dce-40ae-b962-cf68e7d5f8aa":{"id":"be6387cb-9dce-40ae-b962-cf68e7d5f8aa","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#7B64FF","cursor":"pointer","draggable":"false","home":true,"homeX":"-3","homeY":"-1","homeZ":0,"label":"Enter WebXR","labelPadding":"0.2","onClick":"@if (configBot.tags.inAR) {\n    os.disableAR();\n    return;\n} else if (configBot.tags.inVR) {\n    os.disableVR();\n    return;\n}\n\nif (os.device().supportsAR) {\n    os.enableAR();\n} else if (os.device().supportsVR) {\n    os.enableVR();\n} else {\n    os.toast('WebXR is not available on this device.');\n}","onEnterAR":"@configBot.tags.inAR = true;\nmasks.label = 'Exit AR';","onExitAR":"@configBot.tags.inAR = false;\nmasks.label = null;","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","system":"livekit-room-test.buttons.toggleXR","abIDOrigin":"livekit-room-test","onEnterVR":"@configBot.tags.inVR = true;\nmasks.label = 'Exit VR';","onExitVR":"@configBot.tags.inVR = false;\nmasks.label = null;"}},"eda1f33e-219d-4608-90c9-f0ee2a8b7393":{"id":"eda1f33e-219d-4608-90c9-f0ee2a8b7393","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","color":"#FFFFFF","cursor":"pointer","draggable":"false","home":true,"homeX":"-1","homeY":"-5","label":"Screen Share","labelPadding":"0.2","onClick":"@const inst = os.getCurrentInst();\nconst options = await os.getRoomOptions(inst);\n\nlet screenEnabled = false;\nif (options.success) {\n    screenEnabled = options.options.screen;\n}\n\nconst result = await os.setRoomOptions(inst, {\n    screen: !screenEnabled\n})\n\nconsole.log('setRoomOptions:', result);","onInitialize":"@masks.home = false;\nconsole.log(`[${tags.system}] onInitialize`);","onRoomJoined":"@const { roomName, options } = that;\n\nmasks.home = true;\nthisBot.setEnabledState({ enabled: options.screen });\nconsole.log(`[${tags.system}] onRoomJoined`);","onRoomLeave":"@masks.home = false;\nconsole.log(`[${tags.system}] onRoomLeave`);","onRoomOptionsChanged":"@const { roomName, options } = that;\n\nthisBot.setEnabledState({ enabled: options.screen });","scaleX":"1.9","scaleY":"0.9","scaleZ":"0.3","setEnabledState":"@const { enabled } = that;\n\nif (enabled) {\n    masks.color = null;\n} else {\n    masks.color = '#999999';\n}","system":"livekit-room-test.buttons.toggleScreenShare","abIDOrigin":"livekit-room-test"}},"f50ff418-5cf3-4ad9-9fb0-e66244ea8060":{"id":"f50ff418-5cf3-4ad9-9fb0-e66244ea8060","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","form":"sprite","formAddress":"https://publicos-link-filesbucket-404655125928.s3.amazonaws.com/ab-1/266b0f9e17952ca9a0569a221b3f4d1ba6652eb9cf14666b68154fe5162e7bc0.png","home":true,"homeX":-10,"homeY":0,"homeZ":0,"onAnyBotClicked":"@","onClick":"@const result = await os.raycast(\"grid\", os.getPointerPosition(\"mouse\"), os.getPointerDirection(\"mouse\"));\n\nos.log('botID: ' + result.botIntersections.map(x => x.bot.id) + ' ' + result.botIntersections.map(b => b.uv).join(', '));","onGridClick":"@// const result = await os.raycast(\"grid\", os.getPointerPosition(\"mouse\"), os.getPointerDirection(\"mouse\"));\n\n// //os.toast('Found Bots: ' + result.botIntersections.map(b => b.id).join(', '));\n// os.log(result.botIntersections)","orientationMode":"billboard","scale":"4","system":"livekit-room-test.stargate","abIDOrigin":"livekit-room-test"}}}}