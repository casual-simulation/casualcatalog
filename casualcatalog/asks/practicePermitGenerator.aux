{"version":1,"state":{"bf73876c-8e0b-42b3-8f87-02d9c10889e1":{"id":"bf73876c-8e0b-42b3-8f87-02d9c10889e1","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","abIDOrigin":"practicePermitGenerator","cw":"14","draggable":"false","form":"egg","home":true,"homeX":0,"homeY":"0","homeZ":0,"label":"Hey! Tap me to make some QR Codes","loop":false,"onClick":"@masks.label = \"loading\";\n\nconst JSZip = (await import(\"https://cdn.skypack.dev/jszip\")).default;\nconst Papa = (await import(\"https://cdn.skypack.dev/papaparse\")).default;\n\nconst rows = [];\nconst zip = new JSZip();\n\nlet permitCountInput = await os.showInput(tags.permitCount, {\n    title: 'How many permits would you like to generate?',\n    type: 'text',\n    autoSelect: true,\n})\n\nif (permitCountInput) {\n    let inputNumber = Number(permitCountInput);\n\n    if (Number.isNaN(inputNumber)) {\n        os.toast('input must be a number');\n        return;\n    }\n\n    if (!Number.isInteger(inputNumber)) {\n        os.toast('input must be an integer');\n        return;\n    }\n\n    if (inputNumber <= 0) {\n        os.toast('permit count must be >= 1');\n        return;\n    }\n\n    masks.permitCount = Number(permitCountInput);\n} else {\n    os.toast('must provide a number of permits to generate');\n    return;\n}\n\nfor (let i = 0; i < tags.permitCount; i++) {\n    const identifier = uuid();\n    const pin = math.randomInt(1000, 10000);\n    const ph = crypto.sha256(pin).substring(0, 4);\n    const qrUrl = `https://ab1.bot/?ask=eggCarton&bios=local&staticInst=${identifier}&ph=${ph}&cw=${tags.cw}`;\n\n    rows.push({\n        UUID: identifier,\n        PIN: pin,\n        URL: qrUrl\n    });\n\n    if (i !== tags.permitCount - 1) {\n        masks.label = \"working on qr code \" + i;\n    } else {\n        masks.label = \"generation complete\";\n        await os.sleep(1000);\n    }\n}\n\nconst csv = Papa.unparse(rows, {\n    header: true,\n    quotes: true\n});\n\nzip.file(fileDate() + 'practicePermits.csv', csv);\nconst content = await zip.generateAsync({ type: \"blob\" });\nos.download(content, fileDate() + '_practicePermits.zip');\n\nmasks.label = \"tap me again if you want more\";\n\nfunction fileDate() {\n    function twoDigit(n) { return (n < 10 ? '0' : '') + n; }\n    const now = new Date();\n    return '' + now.getFullYear() + twoDigit(now.getMonth() + 1) + twoDigit(now.getDate());\n}\n","scale":"5","system":"practicePermitGenerator.generator","abVersion":"10.5","practicePermitGenerator":"true","cursor":"pointer","labelPosition":"floatingBillboard","onPointerEnter":"@masks.color = tags.hoverColor;","hoverColor":"#73D8FF","color":"#009CE0","onPointerExit":"@masks.color = null;","onEggHatch":"@thisBot.initialize();","initialize":"@if (masks.initialized) {\n    return;\n}\n\nmasks.initialized = true;\n\ngridPortalBot.masks.portalColor = \"#515A5A\"\ngridPortalBot.masks.portalPannable = false\ngridPortalBot.masks.portalRotatable = false\nmasks.label = \"Hey! Tap me to make some QR Codes\"","onInstJoined":"@thisBot.initialize();","permitCount":"250"}}}}