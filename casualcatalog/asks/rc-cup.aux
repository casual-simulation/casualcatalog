{"version":1,"state":{"3192e48c-b6a6-4783-9703-0152a558f387":{"id":"3192e48c-b6a6-4783-9703-0152a558f387","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","system":"rc-cup.cup-liquid","home":"true","color":"#009CE0","abArtifactName":"rc-cup","transformer":"a2b8aae1-8d0b-46fe-a15d-609d465c906b","formOpacity":"0.8","scaleY":"0.6","scaleX":"0.6","homeY":"0","homeZ":"-0.905","homeX":"-0.1","pointable":"false","scaleZ":0.525,"abIDOrigin":"rc-cup"}},"4c062ba6-85f3-4264-9b92-1fc960121a48":{"id":"4c062ba6-85f3-4264-9b92-1fc960121a48","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","system":"rc-cup.cup-model","form":"mesh","formSubtype":"gltf","onBotAdded":"@const cupURL = links.learn.abBuildCasualCatalogURL('/asks/rc-cup-assets/cup.glb');\n\nif (masks.formAddress !== cupURL) {\n    setTagMask(thisBot, 'formAddress', cupURL, 'shared');\n}","learn":"ðŸ”—6657b865-e983-4401-9fc9-f5418d18a7f7","home":"true","transformer":"a2b8aae1-8d0b-46fe-a15d-609d465c906b","homeY":"0","homeZ":"-1.15","scaleX":"1","scaleY":"1","homeX":"0","scaleZ":"1","pointable":"false","modelAttribution":"\"Cup\" (https://skfb.ly/6WWR8) by tropicc is licensed under Creative Commons Attribution (http://creativecommons.org/licenses/by/4.0/).","abArtifactName":"rc-cup","abIDOrigin":"rc-cup"}},"a2b8aae1-8d0b-46fe-a15d-609d465c906b":{"id":"a2b8aae1-8d0b-46fe-a15d-609d465c906b","space":"shared","tags":{"creator":"34c3c210-5bf1-49cf-b151-ee2d07f0e673","system":"rc-cup.root","home":true,"abArtifactName":"rc-cup","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\n    data: {\n        fillAmount: tags.fillAmount,\n        fillColor: tags.fillColor,\n    },\n    dependencies: [\n        {\n            askID: 'rc-cup',\n        }\n    ]\n}","onABArtifactReconstitute":"@thisBot.onABArtifactExperience(that);","onABArtifactExperience":"@const { data } = that;\n\ntags.fillAmount = data.fillAmount;\ntags.fillColor = data.fillColor;","homeZ":0,"strokeWidth":"0","onClick":"@thisBot.cupMenuOpen();","strokeColor":"#00ff00","color":"transparent","scaleY":"2","scaleZ":"2","scaleX":"2","liquid":"ðŸ”—3192e48c-b6a6-4783-9703-0152a558f387","model":"ðŸ”—4c062ba6-85f3-4264-9b92-1fc960121a48","homeY":-2,"homeX":-4,"onBotChanged":"@const changedTags = that.tags;\n\nconst updateLiquid = changedTags.some(t => t === 'fillAmount' || t === 'filledScaleZ' || t === 'fillColor');\nif (updateLiquid) {\n    thisBot.updateLiquid();\n}","updateLiquid":"@let fillAmount = tags.fillAmount >= 0 ? tags.fillAmount : 0;\nfillAmount = Math.min(Math.max(fillAmount, 0), 1);\n\nconst filledScaleZ = tags.filledScaleZ ?? 1;\n\nlinks.liquid.tags.scaleZ = fillAmount * filledScaleZ;\nlinks.liquid.tags.color = tags.fillColor;\n\nconst rcCupMenuBots = getBots(b => b.tags.rcCupMenu != null);\nrcCupMenuBots.forEach(b => b.tags.color = tags.fillColor);","filledScaleZ":"0.525","fillAmount":1,"cursor":"pointer","fillColor":"#009CE0","onBotAdded":"@thisBot.updateLiquid();","onGridClick":"@thisBot.cupMenuReset();","cupMenuReset":"@if (configBot.tags.menuPortal === 'rcCupMenu') {\n    configBot.tags.menuPortal = null;\n}\n\nconst cupMenuBots = getBots(b => b.tags.rcCupMenu != null);\ndestroy(cupMenuBots);","cupMenuOpen":"@thisBot.cupMenuReset();\n\nconfigBot.tags.menuPortal = 'rcCupMenu';\n\nlinks.abMenu.abCreateMenuButton({\n    rcCupMenu: true,\n    label: 'drink',\n    formAddress: 'back_hand',\n    color: tags.fillColor,\n    cup: getLink(thisBot),\n    onClick: `@\n        let fillAmount = links.cup.tags.fillAmount;\n\n        fillAmount -= 0.1;\n\n        if (fillAmount < 0) {\n            fillAmount = 0;\n        }\n            \n        if (links.cup.tags.fillAmount !== fillAmount) {\n            links.cup.tags.fillAmount = fillAmount;\n\n            if (fillAmount === 0) {\n                os.toast('You drank the last drop from the cup.');\n            } else {\n                os.toast('You drank from the cup.');\n            }\n        } else {\n            os.toast('The cup is empty.');\n        }\n    `\n});\n\nlinks.abMenu.abCreateMenuButton({\n    rcCupMenu: true,\n    label: 'refill',\n    formAddress: 'local_drink',\n    color: tags.fillColor,\n    cup: getLink(thisBot),\n    onClick: `@\n        if (links.cup.tags.fillAmount !== 1) {\n            links.cup.tags.fillAmount = 1;\n            os.toast('You refilled the cup');\n        } else {\n            os.toast('The cup is already full.');\n        }\n    `\n})\n\nlinks.abMenu.abCreateMenuButton({\n    rcCupMenu: true,\n    label: 'change color',\n    cup: getLink(thisBot),\n    formAddress: 'colorize',\n    color: tags.fillColor,\n    onClick: `@\n        const selection = await os.showInput(links.cup.tags.fillColor, {\n            title: 'choose color to dye water',\n            type: 'color',\n        })\n\n        if (selection && links.cup.tags.fillColor !== selection) {\n            links.cup.tags.fillColor = selection;\n            os.toast('You have dyed the water');\n        }\n    `\n})","abMenu":"ðŸ”—b30c6c5d-a4f7-4266-ba38-393dc95e1ecb","abIDOrigin":"rc-cup","onDestroy":"@destroy([links.liquid, links.model]);"}}}}