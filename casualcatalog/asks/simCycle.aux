{"version":1,"state":{"0bf46516-4944-4a76-9246-99f425cc3fc6":{"id":"0bf46516-4944-4a76-9246-99f425cc3fc6","space":"shared","tags":{"system":"sim_toolbox.tools.simCycle","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\r\n    data: {\r\n        dimensionData: {\r\n            dimension: [ab.links.remember.tags.abActiveDimension],\r\n            [ab.links.remember.tags.abActiveDimension]: tags[ab.links.remember.tags.abActiveDimension],\r\n            [ab.links.remember.tags.abActiveDimension + 'X']: tags[ab.links.remember.tags.abActiveDimension + 'X'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Y']: tags[ab.links.remember.tags.abActiveDimension + 'Y'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Z']: tags[ab.links.remember.tags.abActiveDimension + 'Z'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationX']: tags[ab.links.remember.tags.abActiveDimension + 'RotationX'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationY']: tags[ab.links.remember.tags.abActiveDimension + 'RotationY'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationZ']: tags[ab.links.remember.tags.abActiveDimension + 'RotationZ'],\r\n        }\r\n    },\r\n    dependencies: [\r\n        {\r\n            askID: 'homePlace'\r\n        }\r\n    ]\r\n}\r\n\r\nreturn shard;","onABArtifactReconstitute":"@const data = that.data;\r\n\r\nif (data.dimensionData) {\r\n    for (const tagName in data.dimensionData) {\r\n        tags[tagName] = data.dimensionData[tagName];\r\n    }\r\n}\r\n\r\nif (data.eggParameters) {\r\n    const dimension = data.eggParameters.gridInformation?.dimension ?? 'home';\r\n    const dimensionX = data.eggParameters.gridInformation?.position?.x ?? 0;\r\n    const dimensionY = data.eggParameters.gridInformation?.position?.y ?? 0;\r\n\r\n    tags.dimension = dimension;\r\n    tags[dimension] = true;\r\n    tags[dimension + 'X'] = dimensionX;\r\n    tags[dimension + 'Y'] = dimensionY;\r\n\r\n    const simCycleBot = getBot(byTag(\"system\", \"sim_toolbox.tools.simCycle\"), not(byID(thisBot.id)));\r\n\r\n    if (simCycleBot) {\r\n        os.toast(\"WARNING: More than one sim cycle is present in this inst\", 8);\r\n    }\r\n}","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\r\n\r\ndelete data.tags[data.tags.dimension + \"X\"];\r\ndelete data.tags[data.tags.dimension + \"Y\"];\r\ndelete data.tags[data.tags.dimension + \"Z\"];\r\ndelete data.tags[data.tags.dimension + \"RotationX\"];\r\ndelete data.tags[data.tags.dimension + \"RotationY\"];\r\ndelete data.tags[data.tags.dimension + \"RotationZ\"];\r\ndelete data.tags[data.tags.dimension];\r\ndelete data.tags.dimension;","simCycle":"true","label":"play","onClick":"@if (tags.cycleState == 'off') {\r\n\r\n    setTagMask(thisBot, \"progressBar\", \"0\", \"local\");\r\n    setTagMask(thisBot, \"progressBarBackgroundColor\", \"#8995a3\", \"local\");\r\n    setTagMask(thisBot, \"progressBarColor\", \"#0073ff\", \"local\");\r\n\r\n    setTagMask(thisBot, \"color\", \"#0073ff\", \"local\");\r\n    setTagMask(thisBot, \"label\", \"pause\", \"local\");\r\n    setTagMask(thisBot, \"cycleState\", \"on\", \"local\");\r\n\r\n    if(tags.cycleInterval) {\r\n        clearInterval(tags.cycleInterval);\r\n    }\r\n\r\n    const intervalID = setInterval(() => {\r\n        shout(\"onTick\");\r\n    }, (1000 / 30));\r\n\r\n    setTagMask(thisBot, \"cycleInterval\", intervalID, \"local\");\r\n\r\n} else {\r\n\r\n    if(tags.cycleInterval) {\r\n        clearInterval(tags.cycleInterval);\r\n    }\r\n\r\n    setTagMask(thisBot, \"cycleInterval\", null, \"local\");\r\n\r\n    setTagMask(thisBot, \"progressBar\", \"0\", \"local\");\r\n    setTagMask(thisBot, \"progressBarBackgroundColor\", \"clear\", \"local\");\r\n    setTagMask(thisBot, \"progressBarColor\", \"clear\", \"local\");\r\n\r\n    setTagMask(thisBot, \"color\", \"#8995a3\", \"local\");\r\n    setTagMask(thisBot, \"label\", \"play\", \"local\");\r\n    setTagMask(thisBot, \"cycleState\", \"off\", \"local\");\r\n}\r\n\r\n","cycleState":"off","progressBarPosition":"floating","labelPosition":"front","labelWordWrapMode":"none","scaleX":"2","color":"#8995a3","progressBarBackgroundColor":"clear","progressBarColor":"clear","progressBar":"0","onTick":"@let newProgressBarValue = tags.progressBar + .033;\r\nif (newProgressBarValue >= 1) {\r\n    newProgressBarValue = 0;\r\n}\r\nsetTagMask(thisBot, \"progressBar\", newProgressBarValue, \"local\");","abArtifactName":"simCycle","abIDOrigin":"simCycle"}}}}