{"version":1,"state":{"4d1ac067-2b94-4b21-8daa-e2857d304c09":{"id":"4d1ac067-2b94-4b21-8daa-e2857d304c09","space":"shared","tags":{"system":"sim_toolbox.tools.simMenu","onABArtifactCollectShards":"@const shard: ABArtifactShard = {\r\n    data: {\r\n        dimensionData: {\r\n            dimension: [ab.links.remember.tags.abActiveDimension],\r\n            [ab.links.remember.tags.abActiveDimension]: tags[ab.links.remember.tags.abActiveDimension],\r\n            [ab.links.remember.tags.abActiveDimension + 'X']: tags[ab.links.remember.tags.abActiveDimension + 'X'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Y']: tags[ab.links.remember.tags.abActiveDimension + 'Y'],\r\n            [ab.links.remember.tags.abActiveDimension + 'Z']: tags[ab.links.remember.tags.abActiveDimension + 'Z'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationX']: tags[ab.links.remember.tags.abActiveDimension + 'RotationX'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationY']: tags[ab.links.remember.tags.abActiveDimension + 'RotationY'],\r\n            [ab.links.remember.tags.abActiveDimension + 'RotationZ']: tags[ab.links.remember.tags.abActiveDimension + 'RotationZ'],\r\n        },\r\n        color: tags.color,\r\n        labelColor: tags.labelColor,\r\n    },\r\n    dependencies: [\r\n        {\r\n            askID: 'simMenu'\r\n        }\r\n    ]\r\n}\r\n\r\nreturn shard;","onABArtifactReconstitute":"@const data = that.data;\r\ntags.color = data.color ?? abPersonality?.tags?.abBaseColor ?? '#00D9CD';\r\ntags.labelColor = data.labelColor ?? 'white';\r\n\r\n//Place bot correctly\r\nif (data.dimensionData) {\r\n    for (const tagName in data.dimensionData) {\r\n        tags[tagName] = data.dimensionData[tagName];\r\n    }\r\n}\r\n\r\n//If new action\r\nif (data.eggParameters) {\r\n    const dimension = data.eggParameters.gridInformation?.dimension ?? 'home';\r\n    const dimensionX = data.eggParameters.gridInformation?.position?.x ?? 0;\r\n    const dimensionY = data.eggParameters.gridInformation?.position?.y ?? 0;\r\n\r\n    tags.dimension = dimension;\r\n    tags[dimension] = true;\r\n    tags[dimension + 'X'] = dimensionX;\r\n    tags[dimension + 'Y'] = dimensionY;\r\n}","onABStripArtifactInstanceDataFromBotData":"@const { data } = that;\r\n\r\ndelete data.tags.labelColor;\r\ndelete data.tags.color;\r\ndelete data.tags[data.tags.dimension + \"X\"];\r\ndelete data.tags[data.tags.dimension + \"Y\"];\r\ndelete data.tags[data.tags.dimension + \"Z\"];\r\ndelete data.tags[data.tags.dimension + \"RotationX\"];\r\ndelete data.tags[data.tags.dimension + \"RotationY\"];\r\ndelete data.tags[data.tags.dimension + \"RotationZ\"];\r\ndelete data.tags[data.tags.dimension];\r\ndelete data.tags.dimension;","onClick":"@shout('abMenuRefresh');\r\nshout(\"clearActionMenu\");\r\n\r\nconfigBot.tags.menuPortal = 'action_menu';\r\n\r\nconst menuOptions = {\r\n    action_menu: true,\r\n    clearActionMenu: `@destroy(thisBot);`,\r\n}\r\n\r\nconst actionBots = getBots(byTag(\"simAction\", true), byTag(\"startingAction\", true));\r\n\r\nfor (let i = 0; i < actionBots.length; ++i) {\r\n   actionBots[i].showAction();\r\n}","abArtifactName":"simMenu","abIDOrigin":"simMenu","strokeColor":"white","simMenu":"true","label":"show action menu","scaleX":"2","scaleZ":".5","scaleY":"2","cursor":"pointer"}}}}