{"version":1,"state":{"96a52b71-956f-41cd-a861-60203006295b":{"id":"96a52b71-956f-41cd-a861-60203006295b","space":"shared","tags":{"system":"story_toolbox.storyElement","storyElement":"true","abIDOrigin":"storyElement","onEggHatch":"@if (that.eggParameters) {\r\n    const dimension = that.eggParameters.gridInformation?.dimension ?? 'home';\r\n    const dimensionX = that.eggParameters.gridInformation?.position?.x ?? 0;\r\n    const dimensionY = that.eggParameters.gridInformation?.position?.y ?? 0;\r\n\r\n    tags[dimension] = true;\r\n    tags[dimension + 'X'] = dimensionX;\r\n    tags[dimension + 'Y'] = dimensionY;\r\n}","onCreate":"@if (tags.abIDOrigin == 'storyElement') {\r\n    shout(\"abMenuRefresh\");\r\n    configBot.tags.menuPortal = \"storyElementMenu\";\r\n\r\n    thisBot.tags.storyElementLocked = false;\r\n    thisBot.tags.label = \"story element\";\r\n    thisBot.tags.elementQuip = 'edit me';\r\n    thisBot.tags.elementPrompt = '';\r\n\r\n    thisBot.aiGenerateStoryElement();\r\n}","onClick":"@if (that.modality == 'mouse' && that.buttonId == 'right') {\r\n    thisBot.generateStoryElementEditMenu();\r\n    return;\r\n}\r\n\r\nconst prompt = thisBot.logPrompt();\r\n\r\nconst response = await ai.chat(prompt);\r\n\r\nif (!response) {\r\n    return;\r\n}\r\n\r\nab.log({message: response?.content, name: tags.label, space: \"shared\"});","abBotMenuOnGenerate":null,"onPortalChanged":null,"home":true,"storyElementLocked":false,"label":"twig","elementQuip":"ouch","homeX":1,"homeY":1,"homeZ":0,"onGridClick":"@shout(\"clearStoryElementMenu\");","onPointerEnter":"@os.tip(tags.elementQuip);","generateStoryElementEditMenu":"@shout(\"clearStoryElementMenu\");\r\n\r\nshout(\"abMenuRefresh\");\r\nconfigBot.tags.menuPortal = \"storyElementEditMenu\";\r\n\r\nif (tags.storyElementLocked) {\r\n    const titleButton = {\r\n        label: thisBot.tags.label,\r\n        clearStoryElementMenu: `@destroy(this);`,\r\n        color: abPersonality.tags.abBaseMenuColor,\r\n        storyElementEditMenu: true\r\n    } \r\n\r\n    const lockButton = {\r\n        label: \"locked\",\r\n        element: getLink(thisBot),\r\n        formAddress: \"lock\",\r\n        onClick: `@\r\n            links.element.tags.storyElementLocked = false;\r\n            links.element.generateStoryElementEditMenu();\r\n        `,\r\n        clearStoryElementMenu: `@destroy(this);`,\r\n        storyElementEditMenu: true\r\n    } \r\n\r\n    await ab.links.menu.abCreateMenuText(titleButton);\r\n    await ab.links.menu.abCreateMenuButton(lockButton);\r\n} else {\r\n    const titleEditButton = {\r\n        label: \"edit title\",\r\n        element: getLink(thisBot),\r\n        onClick: `@\r\n            const newTitle = await os.showInput(links.element.tags.label, {\r\n                title: \"Edit title\"\r\n            });\r\n\r\n            links.element.tags.label = newTitle;\r\n            links.element.generateStoryElementEditMenu();\r\n        `,\r\n        clearStoryElementMenu: `@destroy(this);`,\r\n        storyElementEditMenu: true\r\n    } \r\n\r\n    const promptEditButton = {\r\n        label: \"edit prompt\",\r\n        element: getLink(thisBot),\r\n        onClick: `@\r\n            const newPrompt = await os.showInput(links.element.tags.elementPrompt, {\r\n                title: \"Edit prompt\"\r\n            });\r\n\r\n            links.element.tags.elementPrompt = newPrompt;\r\n            links.element.generateStoryElementEditMenu();\r\n        `,\r\n        clearStoryElementMenu: `@destroy(this);`,\r\n        storyElementEditMenu: true\r\n    } \r\n\r\n    const quipEditButton = {\r\n        label: \"edit quip\",\r\n        element: getLink(thisBot),\r\n        onClick: `@\r\n            const newQuip = await os.showInput(links.element.tags.elementQuip, {\r\n                title: \"Edit quip\"\r\n            });\r\n\r\n            links.element.tags.elementQuip = newQuip;\r\n            links.element.generateStoryElementEditMenu();\r\n        `,\r\n        clearStoryElementMenu: `@destroy(this);`,\r\n        storyElementEditMenu: true\r\n    } \r\n\r\n    const lockButton = {\r\n        label: \"unlocked\",\r\n        element: getLink(thisBot),\r\n        formAddress: \"lock\",\r\n        onClick: `@\r\n            links.element.tags.storyElementLocked = true;\r\n            links.element.generateStoryElementEditMenu();\r\n        `,\r\n        clearStoryElementMenu: `@destroy(this);`,\r\n        storyElementEditMenu: true\r\n    } \r\n\r\n    await ab.links.menu.abCreateMenuButton(titleEditButton);\r\n    await ab.links.menu.abCreateMenuButton(promptEditButton);\r\n    await ab.links.menu.abCreateMenuButton(quipEditButton);\r\n    await ab.links.menu.abCreateMenuButton(lockButton);\r\n\r\n}\r\n","abRightClickIgnore":"true","aiGenerateStoryElement":"@const prompt = await os.showInput(\"\", {\r\n    title: \"What would you like to add to this story?\"\r\n});\r\n\r\nif (!prompt) {\r\n    return;\r\n}\r\n\r\nlet response = await ai.chat([\r\n    {\r\n        role: \"system\",\r\n        content: tags.basePrompt\r\n    },\r\n    {\r\n        role: \"user\",\r\n        content: prompt\r\n    }\r\n])\r\n\r\nresponse = JSON.parse(response.content);\r\n\r\nif (!response) {\r\n    return;\r\n}\r\n\r\nconst activeDimension = configBot.tags.gridPortal;\r\ntags.color = response?.color;\r\ntags.label = response?.name;\r\ntags.elementPrompt = prompt;\r\ntags.elementQuip = response?.expression;\r\ntags[activeDimension] = true;\r\ntags.scaleX = response?.scaling?.x;\r\ntags.scaleY = response?.scaling?.y;\r\ntags.scaleZ = response?.scaling?.z;","basePrompt":"You are a story block in a world with many other story blocks.\r\nYou will recieve a prompt from the user.\r\nReturn JSON with a name for your story block, an appropriate color in hex format, a short 'expression' that makes sense for what you are (example: if you were a cow, your expression might be \"moo\"),\r\nand an x,y,z scaling that represents what you are in a physical space, z is height, units are in feet.","logPrompt":"@const aiMessageArr = [];\r\n\r\naiMessageArr.push({\r\n    role: \"system\",\r\n    content: `You are a story block in a world with many other story blocks. Keep it simple, like a picture book or fable. With this prompt in mind (${tags.prompt}), respond only with what you do or say.`\r\n});\r\n\r\nconst messages = getBots(byTag(\"consoleLogMessageBot\", true), byTag(\"space\", \"shared\"));\r\nfor (let i = 0; i < messages.length; ++i) {\r\n    aiMessageArr.push({\r\n        role: messages[i].tags.name == tags.label ? \"assistant\" : \"user\",\r\n        content: messages[i].tags.name == tags.label ? messages[i].tags.message : messages[i].tags.name + \": \" + messages[i].tags.message\r\n    })\r\n}\r\n\r\nconsole.log(\"prompt\", aiMessageArr);\r\nreturn aiMessageArr;","abVersion":"10.5"}}}}