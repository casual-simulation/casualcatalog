{"version":1,"state":{"64701b0a-e91d-4d0f-b43c-cc98a5b53880":{"id":"64701b0a-e91d-4d0f-b43c-cc98a5b53880","space":"shared","tags":{"system":"server_toolbox.tools.studioHomeWizard","color":"#0000FF","studioHomeBot":null,"abIgnore":"true","onEggHatch":"@if (that.eggParameters) {\r\n    const dimension = that.eggParameters.gridInformation?.dimension ?? 'home';\r\n    const dimensionX = that.eggParameters.gridInformation?.position?.x ?? 0;\r\n    const dimensionY = that.eggParameters.gridInformation?.position?.y ?? 0;\r\n\r\n    tags[dimension] = true;\r\n    tags[dimension + 'X'] = dimensionX;\r\n    tags[dimension + 'Y'] = dimensionY;\r\n\r\n    setTagMask(thisBot, \"gridInformation\", that.eggParameters.gridInformation, \"local\");\r\n    \r\n    thisBot.showStudioHomeConfigMenu();\r\n}","showStudioHomeConfigMenu":"@shout('clearStudioHomeConfigMenu');\r\n\r\nconfigBot.masks.menuPortal = 'studioHomeConfigMenu';\r\n\r\nconst mainButton = {\r\n    clearStudioHomeConfigMenu: `@destroy(thisBot);`,\r\n    studioHomeConfigMenu: true,\r\n    label: \"choose a studio\",\r\n    wizard: getLink(thisBot),\r\n    dropdownSortOrder: 1,\r\n    dropdownOptions: []\r\n}\r\n\r\nconst studios = await os.listUserStudios();\r\n\r\nif (!studios.success) {\r\n    console.log(\"Could not list user studios\");\r\n    os.toast(\"No user studios found\");\r\n    return;\r\n}\r\n\r\nfor (const studio of studios.studios) {\r\n    const studButton = {\r\n            label: studio.displayName,\r\n            studioId: studio.studioId,\r\n            clearStudioHomeConfigMenu: `@destroy(thisBot);`,\r\n            studioHomeConfigMenu: true,\r\n            wizard: getLink(thisBot),\r\n            onClick: `@\r\n                links.wizard.createStudioBot({id: tags.studioId, label: tags.label});\r\n                shout('clearStudioHomeConfigMenu');\r\n            `\r\n        }\r\n    mainButton.dropdownOptions.push(studButton);\r\n}\r\n\r\nab.links.menu.abCreateMenuDropdown(mainButton);","onGridClick":"@shout(\"clearStudioHomeConfigMenu\");","onAnyBotsRemoved":"@const { botIDs } = that;\r\n\r\nif (botIDs.includes(thisBot.id)) {\r\n    shout(\"clearInstCreatorMenu\");\r\n}","onClick":"@thisBot.showStudioHomeConfigMenu();","cursor":"pointer","formOpacity":".33","label":"studio home wizard","labelColor":"#00001c","labelFloatingBackgroundColor":"#0000FF","labelPosition":"floatingBillboard","labelWordWrapMode":"breakWords","strokeColor":"#0000FF","showInstCreatorMenu":null,"createStudioBot":"@shout('clearStudioHomeConfigMenu');\r\n\r\nconst currentURL = new URL(configBot.tags.url);\r\nconst origin = currentURL.origin;\r\n\r\nlet newURL = new URL(origin);\r\n\r\nif (abRemember.tags.allowChannels) {\r\n    newURL.searchParams.append(\"channel\", false);\r\n}\r\n\r\nif (configBot.tags.comId) {\r\n    newURL.searchParams.append(\"comId\", configBot.tags.comId);\r\n}\r\n\r\nnewURL.searchParams.append(\"owner\", 'player');\r\nnewURL.searchParams.append(\"inst\", 'home');\r\nnewURL.searchParams.append(\"gridPortal\", 'home');\r\nnewURL.searchParams.append(\"studio\", that.studioId);\r\n\r\nab.links.search.onLookupAskID({\r\n    askID: \"instBot\",\r\n    sourceEvent: 'tool',\r\n    eggParameters: {\r\n        toolboxBot: tags.toolbox,\r\n        gridInformation: tags.gridInformation,\r\n        serverParameters: {\r\n            'bios': 'private',\r\n            'inst': 'home',\r\n            'url': newURL.href,\r\n            'label': that.label,\r\n            'studio': that.studio,\r\n        }\r\n    },\r\n});\r\n\r\nshout(\"abMenuRefresh\");\r\n\r\ndestroy(thisBot);","studioHomeWizard":"true","abVersion":"10.9"}}}}